<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NurApi Class</title><meta name="Title" content="NurApi" /><meta name="Help.Id" content="T:NurApiDotNet.NurApi" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="NurApiDotNet" /><meta name="guid" content="1902b97f-38f5-bf7f-4e66-55bf65e24f9a" /><meta name="Description" content="NurApi class is used to manage connection and communicate with RFID device." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Nurapi Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Nur<wbr />Api Class</h1><div class="summary">
            NurApi class is used to manage connection and communicate with RFID device.<br /><br />
            Discover devices: <a href="456a3403-367e-41e7-67d6-796a878d64dc.htm">NurDeviceDiscovery</a><br />
            Connect device: <a href="13ea44a6-ef4b-0cb4-d62f-cd2b85525ddf.htm">Connect(Uri)</a><br /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="29411023-0052-089d-f65f-b19dc7aea29c.htm">NurApiDotNet</a><br /><strong>Assembly:</strong> NordicID.NurApi.Net (in NordicID.NurApi.Net.dll) Version: 3.1.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NurApi</span> : <span class="identifier">IDisposable</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">NurApi</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noopener noreferrer">IDisposable</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
            See full sample app <a href="273f235d-2399-6a15-7a0e-f12f18fa7d28.htm">NurApiDocSample</a></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="ID0UM0FASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="a54d38e0-f930-b334-dd9d-57bbaa88227e.htm">NurApi</a></td><td>
            Nurapi contructor. Single NurApi handle for single RFID Device at the time.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0VT0FASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="cac14c3b-268c-47c7-20d7-ad2246e3c201.htm">AntennaMask</a></td><td>
            Bitmask of enabled antennas.  
            DEPRECATED: Do not use for new designs, use AntennaMaskEx instead.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="f0d160dc-25a0-8246-6fbd-59a32937f676.htm">AntennaMaskEx</a></td><td>
            Bitmask of enabled antennas, support up to 32 antennas. Value 0x1 - 0xFFFFFFFF.
            </td></tr><tr><td><a href="3cf03591-8807-546b-9ae7-5d1b3ff57ace.htm">AntennaPowerEx</a></td><td>
            Per antenna tx level settings. Array with exactly 32 entries must be supplied.
            </td></tr><tr><td><a href="d2260f04-a2ad-6bb2-06f1-caa4870042d0.htm">AutoReconnect</a></td><td>
            Enable/disable automatic reconnection on connection loss.
            </td></tr><tr><td><a href="4932c277-d8cf-de5a-c5ce-6c02977dd567.htm">Autotune</a></td><td>
            Runtime antenna tuning settings.
            </td></tr><tr><td><a href="7a7fe99d-cf0f-37f2-9ddf-55a7a14ae557.htm">AutotuneEnable</a></td><td>
            Enables the run-time automatic tuning.
            This feature is supported in the L2 module's FW version 5.0-A and on.
            </td></tr><tr><td><a href="f977fed4-0952-eafe-58cb-cb6dbd639921.htm">AutotuneThreshold</a></td><td>
            Run-time automatic tuning's threshold value in dBm.
            </td></tr><tr><td><a href="8227fcce-02ca-15c7-325d-afafa0c880e9.htm">AutotuneThresholdEnable</a></td><td>
            Enable or disable using of the run-time automatic tuning's threshold value.
            This feature is supported in the L2 module's FW version 5.0-A and on.
            </td></tr><tr><td><a href="81e63d9c-6d22-bbd4-5a31-2cc1690c6b21.htm">AvailablePhysicalAntennas</a></td><td><p>Get list of available physical antennas supported by connected reader.</p></td></tr><tr><td><a href="181da10d-7ade-2ecb-9fe5-a5354b390d8b.htm">BaudRate</a></td><td>
            NUR serial port baudrate index.
            </td></tr><tr><td><a href="8e03ad7c-a838-3ea3-7674-45607933d912.htm">Capabilites</a></td><td>
            Get reader capabilities about connected device.
            </td></tr><tr><td><a href="e6b3c277-2fc0-5253-333c-f77e015d3736.htm">CommCmdRetries</a></td><td>
            Communication cmd re-send retries, if no response received within timeout.
            Default is 2
            </td></tr><tr><td><a href="88cb6499-7897-14b2-28d8-706924a749d7.htm">CommLongTimeoutMilliSec</a></td><td>
            Communication timeout for possible long runnning commands in milliseconds.
            Some tag operation commands may take long time to finish, depending on enabled antenna count and/or parameters.
            Inventory and tag access commands uses this timeout, such as Inventory, InventorySelect, Read, Write, Lock, Kill, Gen2V2
            Default is 17000 ms
            </td></tr><tr><td><a href="f617b7ef-eb6e-079b-5a10-18c5b2f178cc.htm">CommTimeout</a></td><td>
            Set communication timeout in seconds. Range is 3...15.
            </td></tr><tr><td><a href="b89c2d49-bc84-55bf-fffc-74659d470c5e.htm">CommTimeoutMilliSec</a></td><td>
            Communication timeout in milliseconds.
            Default is 5000 ms
            </td></tr><tr><td><a href="7732159a-5e1d-184c-ae2d-3a718026d79d.htm">ConnectedDeviceUri</a></td><td>
            Get Uri of currently connected device, null if not connected.
            </td></tr><tr><td><a href="faa2b196-ae48-4c29-e277-94ae28286b9f.htm">ConnectionStatus</a></td><td>
            Get current transport connection status.
            </td></tr><tr><td><a href="8b679b2b-475d-12e8-6734-63e989618497.htm">EnabledAntennas</a></td><td>
            Antenna enable. This will internally set <a href="f0d160dc-25a0-8246-6fbd-59a32937f676.htm">AntennaMaskEx</a></td></tr><tr><td><a href="cc861bb2-ac56-bf2a-ba32-e9a753d40804.htm">EnabledPhysicalAntennas</a></td><td><p>Get or sets list of enabled physical antennas in connected reader.</p></td></tr><tr><td><a href="06bfdafd-ba66-b906-9040-ec67deb0d9a2.htm">EnableHopEvents</a></td><td>
            Enable frequency hop event generation.
            <a href="12563a94-e2e3-9826-b3d5-12ae47fc1bec.htm">OPFLAGS_EN_HOPEVENTS</a></td></tr><tr><td><a href="d0775d0b-95fe-5c7d-8fc1-f28e7dd999e4.htm">EnableInvStreamZeros</a></td><td>
            Enable "zero tags found" notification during inventory streams
            <a href="b84cdb76-14c8-7c0d-2998-a1b6841f3b14.htm">OPFLAGS_INVSTREAM_ZEROS</a></td></tr><tr><td><a href="0ffa0eda-05ea-ee7e-fc76-c080fe021b16.htm">EnableTagPhaseDiff</a></td><td>
            Tag phase diff. Return tag phase angle difference in units of tenths of degrees in tag meta data timestamp field. Supported only in NUR3 modules.
            <a href="e7835505-b5e4-1c61-d8ff-04bbea1d4182.htm">OPFLAGS_EN_PHASE_DIFF</a></td></tr><tr><td><a href="617ee399-fd36-8127-9e70-277c5065cebc.htm">EnableTagPhaseInfo</a></td><td>
            Tag phase info. Return tag phase angle in units of tenths of degrees in tag meta data timestamp field. Supported only in NUR2 modules.
            <a href="28f535ad-b66a-4bf1-7907-11bf91e4c978.htm">OPFLAGS_EN_TAG_PHASE</a></td></tr><tr><td><a href="46c0921f-d78d-ad64-0f49-899771993d8a.htm">EnableTuneEvents</a></td><td>
            Enable run-time tuning events
            <a href="7c91beb1-9036-3df2-8dfa-5ff853bf0622.htm">OPFLAGS_EN_TUNEEVENTS</a></td></tr><tr><td><a href="b1542d98-11d8-fb55-600d-ef358187ce83.htm">FileVersion</a></td><td>
            The NurApi assembly version.
            </td></tr><tr><td><a href="b5bb87ee-a93b-c807-7343-5a7e63844b87.htm">Info</a></td><td>
            Get information about connected device.
            </td></tr><tr><td><a href="449db09b-a30a-2690-806d-da6ec00cbe7b.htm">InventoryEpcLength</a></td><td>
            Desired EPC Length filter in bytes. All other EPC's will be discarded during inventory.
            </td></tr><tr><td><a href="eda33e39-f0ba-3059-6ce7-f6ac49518379.htm">InventoryQ</a></td><td>
            Default Q used for inventory. Value 0 - 15, where value 0 means automatic Q selection.
            </td></tr><tr><td><a href="a97daabd-7e88-9f15-61b6-ff0ec86f9857.htm">InventoryReadCtl</a></td><td>
            Takes the inventory + read into use (true) or turns it off (false).
            When read tells whether there is a valid inventory + read configuration present in the module or not.
            Uses the configuration set with <a href="56c02dc8-2092-95b1-57cd-94dcfc97a8cd.htm">InventoryRead(Boolean, UInt32, UInt32, UInt32, UInt32)</a>, <a href="d1b8c820-5d0e-77b5-74df-11fbc596b212.htm">TIDInventory(UInt32, UInt32)</a> or <a href="81972e31-1dcd-0f57-b8c3-2a49c785dac9.htm">UserMemInventory(UInt32, UInt32)</a></td></tr><tr><td><a href="0198d06f-6add-c6a3-9979-50e220e6f397.htm">InventoryRounds</a></td><td>
            Default rounds for inventory. Value 0 - 10, where 0 means automatic rounds selection.
            This value specifies full G2 query rounds performed in one inventory command.
            </td></tr><tr><td><a href="04f6fd4a-7ce7-45f8-e520-81b1a8d3a590.htm">InventoryRssiFilter</a></td><td>
            RSSI filters used for inventory operations.
            </td></tr><tr><td><a href="59b91da6-fcbf-9310-9e4e-200273fa4217.htm">InventorySession</a></td><td>
             Default session for inventory. Value 0 - 3.
             </td></tr><tr><td><a href="0ddeb4d0-9708-c41f-04c3-24839bcf7dd4.htm">InventoryTarget</a></td><td>
            Inventory target.
            </td></tr><tr><td><a href="61b9fbf2-de5d-9410-70d1-b874ca655d05.htm">InventoryTriggerTimeout</a></td><td><p>Triggered inventory timeout in milliseconds.</p><p>Device will scan new tags specified timeout when no new tags are found.</p><p>If no new tags found within timeout, triggred inventory is considered done and results are sent to the host.</p></td></tr><tr><td><a href="26b25ed3-6a63-597c-5e39-60c5cee7d006.htm">KillTimeout</a></td><td>
            Kill operation timeout.
            </td></tr><tr><td><a href="7c37c920-2c6b-34e0-60bf-13d1963daebb.htm">LastConnectUri</a></td><td>
            Get Uri of last Connect(Uri) call.
            </td></tr><tr><td><a href="b01ce248-9b5f-3d36-e843-c43b885f9e79.htm">LinkFrequency</a></td><td>
            Tag backscatter link frequency in Hz.
            </td></tr><tr><td><a href="eedf0395-136c-d78a-b163-5668209faeee.htm">LockTimeout</a></td><td>
            Lock operation timeout.
            </td></tr><tr><td><a href="da49b593-b464-e2fa-fc13-6246b32e01aa.htm">OpFlags</a></td><td>
            Operation flags.
            </td></tr><tr><td><a href="451aa542-69df-603c-88a2-56ce38671922.htm">PeriodSetup</a></td><td>
            Configures inventory stream's duty cycle.
            Does not save the setting into the module's non-volatile settings.
            </td></tr><tr><td><a href="afb40dfa-f2bf-dd94-6919-77a0b9bccfc3.htm">PeriodSetupSave</a></td><td>
            Configures inventory stream's duty cycle.
            Setting this value also saves the setting into the module's non-volatile settings.
            </td></tr><tr><td><a href="a8478c5c-5c98-323b-1078-0e7a5e4cc76e.htm">ReadRssiFilter</a></td><td>
            RSSI filters used for read operations.
            </td></tr><tr><td><a href="c813b7c8-359c-2dd1-77bd-ceaa68eff4c7.htm">ReadTimeout</a></td><td>
            Read operations timeout.
            </td></tr><tr><td><a href="b424386d-48ad-7ef6-0820-56de1290ba94.htm">RealBaudRate</a></td><td>
            NUR serial port baudrate in bps.<br />
            If value not support, default 115200 bps will be set
            </td></tr><tr><td><a href="8d101281-9daa-31ad-0187-6b927d0b05c2.htm">Region</a></td><td>
            Operating region.
            </td></tr><tr><td><a href="601806e6-dbe4-89f1-6ff6-7900d5f137c7.htm">RfProfile</a></td><td>
            RF profile setting. Device will select best RF settings based on profile.
            </td></tr><tr><td><a href="8276c5bf-6a21-40ae-6081-101a9b2573af.htm">RxDecoding</a></td><td>
            RX encoding (Miller encoding) value FM0 (0), M2 (1), M4 (2) or M8 (3)
            </td></tr><tr><td><a href="d9b80e04-ebeb-c31e-ab16-c6116597cd08.htm">RxSensitivity</a></td><td>
            Receiver sensitivity setting.
            </td></tr><tr><td><a href="b6e0cc5a-293e-0132-bcae-f62e7ece4974.htm">ScanSingleTriggerTimeout</a></td><td>
            Triggered single tag scan timeout in milliseconds.
            </td></tr><tr><td><a href="45cb2939-ff1e-0be6-b8f7-0dc609871b95.htm">SelectedAntenna</a></td><td>
            Zero based index of selected antenna logical id. ANTENNAID_AUTOSELECT (-1) means auto switch between enabled antennas. 
            </td></tr><tr><td><a href="fd874bd8-99c4-2698-c35e-54bc1fa99e26.htm">Setup</a></td><td>
            Get current connected device ModuleSetup
            </td></tr><tr><td><a href="3e3a08fc-db80-6171-a26c-86b50ce5a499.htm">Title</a></td><td>
            Title string of NUR module.
            </td></tr><tr><td><a href="73fe7dcd-279e-90e9-afc0-4861687fca64.htm">TxLevel</a></td><td>
             Transmission level attenuation in 1dB steps.
             </td></tr><tr><td><a href="ea628f8b-500d-1392-50f3-e30867b67da0.htm">TxModulation</a></td><td>
            Transmission modulation.
            </td></tr><tr><td><a href="10d149f4-a9e2-a7d5-8be1-39ee58c2a2dc.htm">UserData</a></td><td>
            User defined object
            </td></tr><tr><td><a href="b08e4bab-2323-9f1f-b67f-18888ec248e9.htm">WriteRssiFilter</a></td><td>
            RSSI filters used for write operations.
            </td></tr><tr><td><a href="e0f7fe20-234c-4146-2e2a-596166ac57ac.htm">WriteTimeout</a></td><td>
            Write operations timeout.
            </td></tr><tr><td><a href="1f1ac582-88df-b8b7-b395-d9ae8b9508ff.htm">XPCRemoval</a></td><td>
            XPC removal control.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="ID0VM0FASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="132ec017-83f8-7e95-b726-f792aea8d6f9.htm">AccBarcodeCancel</a></td><td>
            Cancel barcode scan immediately.
            </td></tr><tr><td><a href="0b76b56c-f70c-d630-11dd-31b20d6130c7.htm">AccBarcodeStart</a></td><td>
            Start scan for barcode reader engine<br />
            This function only start barcode reading. Use  for receiving scan results.
            </td></tr><tr><td><a href="d38412ed-40e7-2b1e-29ba-88c9b5b95d92.htm">AccBeep</a></td><td>
            Generate simple beep sound for accessory device
            </td></tr><tr><td><a href="1c2a4eae-d86d-bc48-f2da-98d432d8455d.htm">AccClearBLEPasskey</a></td><td>
             Clear current passkey from device
            </td></tr><tr><td><a href="cdd7a96f-dd50-55c2-7a9b-bbf059db537e.htm">AccClearPairingData</a></td><td>
            Clear pairing information from accessory device <br />
            Note: if pairings exist then accessory device will be rebooted.
            </td></tr><tr><td><a href="b1e00fcb-cd28-083c-299e-20e87ad3fa0b.htm">AccGetBatteryInfo</a></td><td>
            Get battery info of accessory
            </td></tr><tr><td><a href="886197f4-7796-3d73-4fbb-8a7b206d6893.htm">AccGetBLEPasskey</a></td><td>
             Get current BLE passkey
            </td></tr><tr><td><a href="33c641f8-1e6a-cdcd-0566-f63eb6953a9c.htm">AccGetConfig</a></td><td>
            Get configuration from accessory.
            </td></tr><tr><td><a href="1639c058-5c8b-6fd1-aa5b-324e21475f10.htm">AccGetConnectionInfo</a></td><td>
            Get information about the connection
            </td></tr><tr><td><a href="cfb7a8e9-a175-bc4c-31e3-0ab83c263070.htm">AccGetFwInfo</a></td><td>
            Get information about the accessory device
            </td></tr><tr><td><a href="feb0c9a7-186c-3be4-ffa6-31510efc9ec2.htm">AccGetHIDMode</a></td><td>
            Get current HID mode
            </td></tr><tr><td><a href="fe46d612-17b2-bca6-a562-d2831820504e.htm">AccGetHwHealth</a></td><td>
            Get information about HW health
            </td></tr><tr><td><a href="03c492f5-01ff-aa14-ab3e-1c13c7591119.htm">AccGetModelInfo</a></td><td>
            detailed info about model
            </td></tr><tr><td><a href="a3fad9e9-ea40-8e11-4ed9-caed6c84db00.htm">AccGetPairingMode</a></td><td>
            Get current Pairing mode
            </td></tr><tr><td><a href="6dd3ac69-f556-d681-b642-b22067407a8a.htm">AccGetWirelessChargeStatus</a></td><td>
            Get wireless charge status.
            </td></tr><tr><td><a href="99480bb4-7ba5-0174-23f7-086071531c68.htm">AccImagerAim</a></td><td>
            Set Imager aimer on/off
            </td></tr><tr><td><a href="60e54ad2-8f9f-183d-f237-c815414e44d5.htm">AccImagerCmd</a></td><td>
            Send configuring command to Imager
            </td></tr><tr><td><a href="6818de29-aba7-bdd7-838b-4c125f3556e8.htm">AccImagerSaveConfig</a></td><td>
            After sending configuration to imager using <a href="60e54ad2-8f9f-183d-f237-c815414e44d5.htm">AccImagerCmd(NurApi<span id="LST9496194F_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ImagerType, String)</a>, settings are ready to use but next power down causes settings to lost.<br />
            Therefore, it’s important to save settings to volatile memory of imager.
            </td></tr><tr><td><a href="c8e92744-e35b-f52d-b364-0105a55e2073.htm">AccPowerOff</a></td><td>
            Power off accessory.<br />
            Note: Accessory will be disconnect.
            </td></tr><tr><td><a href="84abcf75-17a7-bea1-2d65-317cc2c8c303.htm">AccRestart</a></td><td>
            Restart accessory.<br />
            Note: Accessory will be disconnect.
            </td></tr><tr><td><a href="8ade8f14-d76d-8b62-5617-cf8458975b2d.htm">AccSensorEnumerate</a></td><td>
            Get all connected sensors
            </td></tr><tr><td><a href="22effca8-a521-46f2-821e-436091ded604.htm">AccSensorGetConfig</a></td><td>
            Get current sensor configuration.
            </td></tr><tr><td><a href="969a06bb-490b-72ef-d331-ada40969fdae.htm">AccSensorGetFilter</a></td><td>
            Get filter settings of sensor
            </td></tr><tr><td><a href="fc34df52-c754-8578-9617-d0e42cfa9734.htm">AccSensorGetValue</a></td><td>
             Get sensor value
            </td></tr><tr><td><a href="f8b286f7-f350-7240-53f8-b5c3d808ea79.htm">AccSensorSetConfig</a></td><td>
            Change sensor configuration (currently only the mode can be changed).<br />
            cfg.source is used to identify the sensor.
            </td></tr><tr><td><a href="76381ab0-2ce6-1a35-73ff-7ab2db1ce8cc.htm">AccSensorSetFilter</a></td><td>
            Change filter of sensor.
            </td></tr><tr><td><a href="c31b4d82-bf17-51ff-3dfc-4257476ecf9e.htm">AccSetBLEPasskey</a></td><td>
            Set 6-digit BLE passkey (digits 0-9 only)
            </td></tr><tr><td><a href="1e2a530f-e700-a708-f4e4-fedda1ba7c2e.htm">AccSetConfig</a></td><td>
            Set accessory configuration. 
            </td></tr><tr><td><a href="ee0b06c4-ddfb-bbc7-8fc2-345f969ad0ee.htm">AccSetHIDMode</a></td><td>
            Set <a href="90d928ee-e349-788f-9b4e-7588c384c0a5.htm">NurApi<span id="LST9496194F_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>HIDMode</a><br />
            Note: Accessory restart required after set HID mode.
            </td></tr><tr><td><a href="442254bf-4c2c-0cb2-ccb6-4b8611e92cc0.htm">AccSetLedOp</a></td><td>
             Sets the LED operation mode.
            </td></tr><tr><td><a href="e3bedf48-6730-3f40-e4f1-6741773f7847.htm">AccSetPairingMode</a></td><td>
            Set <a href="63037dd3-b06d-aee4-aa8c-d94835512d7d.htm">NurApi<span id="LST9496194F_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>PairingMode</a><br />
            Note: Accessory restart required after set PairingMode mode.
            </td></tr><tr><td><a href="1c8be964-69f8-46cc-c7ae-0719074171c3.htm">AccSetWirelessCharge</a></td><td>
            Set wireless charge on/off
            </td></tr><tr><td><a href="f7b3d7b1-a8fd-8a79-c501-720612e420da.htm">AccVibrate</a></td><td>
            Use vibra of accessory device<br />
            Parameter exception thrown if vibratingTime * count exceeds 2000ms
            </td></tr><tr><td><a href="f98cc681-bc7e-2757-2c14-db433f4f2e73.htm">AllocAuthParam</a></td><td>
            Basic allocation of authentication parameters.
            </td></tr><tr><td><a href="32814f70-5ea0-4e2f-0caa-caea7b4a6946.htm">Beep<span id="LST9496194F_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Generate beep sound if beeper device available
            </td></tr><tr><td><a href="de4fc359-83d0-9cf3-ce51-6be32920e695.htm">Beep(Int32, Int32, Int32)</a></td><td>
            Generate beep sound if beeper device available
            </td></tr><tr><td><a href="8f947ea1-a3a0-93fe-cb50-b89cec0532c5.htm">BinToHexString</a></td><td>
            Converts byte array to Hex strings and appends delimiter string to end
            </td></tr><tr><td><a href="a689baa1-8532-63f4-b61d-aed2a9971014.htm">BitLenToByteLen</a></td><td>
            Get required byte length for given number of bits.
            </td></tr><tr><td><a href="049af90f-1376-0cf0-1921-33bceec089b9.htm">BlockPermalock</a></td><td>
            Do BlockPermalock without selecting any tag.
            Assume one tag in field.
            </td></tr><tr><td><a href="59bbc40a-ccbf-3ec0-3830-b774266ec47b.htm">BlockPermalockByEPC</a></td><td>
            Do BlockPermalock by selecting the tag by its EPC.
            </td></tr><tr><td><a href="305c9e15-1851-2f62-819a-2c4486063a39.htm">BlockPermalockSingulated</a></td><td>
            do BlockPermalock by selecting the tag with specific singulation data.
            </td></tr><tr><td><a href="26006dc2-846f-a6ff-0e2d-06146ccca2a9.htm">BlockWriteByEPC</a></td><td>
            Write data to tag by EPC singulation using specific block write.
            </td></tr><tr><td><a href="bbc47ff3-f79b-22ba-f096-d51fd10624a2.htm">BlockWriteSingulatedTag(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte)</a></td><td>
            Write data to tag with specific singulation using specific block write.
            The Selection mask is assumed to be in byte length i.e. divisible by 8.
            </td></tr><tr><td><a href="e3e12ee1-415f-5d97-95a9-1154d6538af3.htm">BlockWriteSingulatedTag(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_10" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Byte)</a></td><td>
            Write data to tag with specific singulation using specific block write.
            </td></tr><tr><td><a href="440d1fd4-87e9-82d9-0f17-ce3f3da120ef.htm">BlockWriteTag</a></td><td>
            Write data to tag with no singulation using specific block write.
            </td></tr><tr><td><a href="17f3270a-d446-4ffd-f8fb-2778e16386b9.htm">BuildCustomHoptable</a></td><td>
            Build custom frequency hoptable
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="0dc655c5-2616-e62a-eab6-e2e49e16827a.htm">CancelOperation</a></td><td>
            Cancel all pending/queued NurApi operations.
            </td></tr><tr><td><a href="76a3c545-f8bd-fa61-3b30-5fd3fce74074.htm">ClearIdBuffer</a></td><td>
            Clear the module's internal ID buffer.		
            </td></tr><tr><td><a href="b1c02403-a4a4-9b09-0cb3-a2492d7bc853.htm">ClearTags</a></td><td>
            Clear NurApi's internal tag storage memory from tags
            </td></tr><tr><td><a href="c149abe5-699c-47eb-e480-1c40e99ed35e.htm">ClearTagsEx</a></td><td>
            Clear NurApi's internal tag storage and RFID reader memory from tags.
            </td></tr><tr><td><a href="5dc4d42a-d174-dae1-3117-f3d9056e6853.htm">ConfigureXTIDInventory</a></td><td>
            Setup TID content based inventory + read.
            Configures inventory + read so that the data part is read based on the TID (XTID) contents.
            </td></tr><tr><td><a href="a719a73b-8df7-18dc-0c15-452be95d62a1.htm">Connect<span id="LST9496194F_12" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            (Re)Connect to last connected device.
            </td></tr><tr><td><a href="ffd5d40b-04b4-f087-72ef-a61378a87ddf.htm">Connect(String)</a></td><td>
            Connect to specific reader.
            </td></tr><tr><td><a href="13ea44a6-ef4b-0cb4-d62f-cd2b85525ddf.htm">Connect(Uri)</a></td><td>
            Connect to specified reader.<br />
            NurApi supportes 'tcp://' and 'mdns://' types by default.<br />
            - 'tcp' connect to reader by ip address; tcp://address[:port]<br />
            - 'mdns' connect to reader by mdns name; mdns://device_name
            <br /><br />
            Serial port and BLE transports are platform specific and require additional 
            assemblies, such as NordicID.NurApi.Android, NordicID.NurApi.SerialTransport, NordicID.NurApi.SerialTransport.UWP
            </td></tr><tr><td><a href="a1e9f362-d336-946e-a046-3f131603820f.htm">ConnectSerialPort</a></td><td>
            Connects to COM port using default baudrate (115200 bps)
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="860e29df-f0b6-8d5a-6227-1da93aaff79f.htm">ConnectSocket</a></td><td>
            Connects to reader TCP/IP socket.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="3671ba94-5392-25df-a25d-dc0071e542bf.htm">ContCarrier</a></td><td>
            Continuous carrier test setup.
            </td></tr><tr><td><a href="03b4de00-1e65-49b1-dc34-43ab5b63534e.htm">CustomCmd(Int32, <span id="LST9496194F_13" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_14" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Executes NUR API protocol formatted command exchange with the connected reader.
            </td></tr><tr><td><a href="8da3ecf9-dc9d-ef8f-44c2-d069135fb299.htm">CustomCmd(Int32, <span id="LST9496194F_15" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_17" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span><span id="LST9496194F_19" data-languageSpecificText="cpp=%"></span>, UInt32<span id="LST9496194F_20" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Executes NUR API protocol formatted command exchange with the connected reader.
            </td></tr><tr><td><a href="5917129e-396b-60b4-089c-493b92850172.htm">CustomExchange(UInt32, Boolean, NurApi<span id="LST9496194F_21" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CustomExchangeParams)</a></td><td>
            Exchange a custom bit stream without any singulation using the custom bit stream control structure.
            </td></tr><tr><td><a href="c13a0ca5-cd23-a04c-b38f-b4d0cc8e3ae3.htm">CustomExchange(UInt32, Boolean, UInt16, UInt16, UInt32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, <span id="LST9496194F_22" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Exchange a custom bit stream without any singulation specifying all the parameters.
            </td></tr><tr><td><a href="a21e94a0-d289-8af5-3dd9-af9554c76121.htm">CustomExchangeByEPC(UInt32, Boolean, <span id="LST9496194F_24" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_26" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CustomExchangeParams)</a></td><td>
            Exchange a custom bit stream with an EPC singulated tag using the custom bit stream control structure.
            </td></tr><tr><td><a href="4a4157f2-c6d1-0f81-fffa-7e17f7353b65.htm">CustomExchangeByEPC(UInt32, Boolean, <span id="LST9496194F_27" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_28" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt16, UInt16, UInt32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, <span id="LST9496194F_29" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_30" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Exchange a custom bit stream with an EPC singulated tag specifying all the parameters.
            </td></tr><tr><td><a href="a3c43adc-4652-5df3-c3c5-4f1f91463f1f.htm">CustomExchangeSingulated(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_31" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_32" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_33" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CustomExchangeParams)</a></td><td>
            Exchange a custom bit stream with a singulated tag using the custom bit stream control structure.
            </td></tr><tr><td><a href="b3f57f51-5702-861d-d6cf-088a191a5651.htm">CustomExchangeSingulated(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_34" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_35" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt16, UInt16, UInt32, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, <span id="LST9496194F_36" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_37" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Exchange a custom bit stream with a singulated tag specifying all the parameters.
            </td></tr><tr><td><a href="60c88a05-97b5-a024-bf15-72f7c7fced60.htm">CustomReadSingulatedTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_38" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_39" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, Byte)</a></td><td>
            Read data from tag with specific singulation, customized read command and bank parameter. 
            Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="288ec40c-5fdb-4e14-7405-7f3396b1b6aa.htm">CustomReadSingulatedTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_40" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_41" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, Int32)</a></td><td>
            Read data from tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            This command uses custom read command and bank parameters.
            </td></tr><tr><td><a href="96e77f7a-b626-4c02-f680-99b9756d1e67.htm">CustomReadTag</a></td><td>
            Read data from tag without any singulation data using customized read command and bank parameters.
            This function can be used for tags that do not have an EPC.
            </td></tr><tr><td><a href="dd7f2e33-5d8b-c667-d5fe-4d7c00144e9a.htm">CustomReadTagByEPC</a></td><td>
            Read data from tag singulated by tag's EPC memory using custom read command and custom bank parameter.
            </td></tr><tr><td><a href="789546e0-0c4f-36b7-3b52-e641b77d6415.htm">CustomWriteSingulatedTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_42" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_43" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_44" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_45" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag with specific singulation using customizable write command and bank parameter.
            Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="5fa1d08d-3457-fcbd-3cbb-1381f2bacfe8.htm">CustomWriteSingulatedTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_46" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_47" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_48" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_49" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag with specific singulation using customizable write command and bank parameter.
            Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="f39f54ee-80f2-f159-9d0e-f4493f38c5d6.htm">CustomWriteSingulatedTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_50" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_51" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_52" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_53" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag with specific singulation using customizable write command and bank parameter.
            Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="822875f3-00ba-7e90-3eaa-549c4c757e09.htm">CustomWriteTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, UInt32, <span id="LST9496194F_54" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_55" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag without any singulation data using customizable write command and bank parameter.
            This function can be used for tags that do not have an EPC.
            <p>Note:If there's more than one tag in range, this function will most likely fail due to the RF collision.</p></td></tr><tr><td><a href="5966147e-35b8-ec7c-495f-bb938420e427.htm">CustomWriteTag(UInt32, Byte, UInt32, Byte, UInt32, Boolean, UInt32, <span id="LST9496194F_56" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_57" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag without any singulation data using customizable write command and bank parameter.
            This function can be used for tags that do not have an EPC.
            <p>Note:If there's more than one tag in range, this function will most likely fail due to the RF collision.</p></td></tr><tr><td><a href="8b019c42-07d2-9002-4080-2e31a01c3e1e.htm">CustomWriteTagByEPC(UInt32, Byte, UInt32, Byte, UInt32, Boolean, <span id="LST9496194F_58" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_59" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_60" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag singulated by tag's EPC memory using customizable write command and bank parameter.
            </td></tr><tr><td><a href="a8d4f7ad-626d-35fb-f6c7-7fb8adeba781.htm">CustomWriteTagByEPC(UInt32, Byte, UInt32, Byte, UInt32, Boolean, <span id="LST9496194F_62" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, <span id="LST9496194F_64" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_65" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag singulated by tag's EPC memory using customizable write command and bank parameter.
            </td></tr><tr><td><a href="0d38aeaa-b9eb-0ca8-930a-46e9fd4275bd.htm">DiagGetConfig</a></td><td>
            Get current diagnostics configuration.
            </td></tr><tr><td><a href="6915739d-553c-9bad-99af-37cfdba6b8bf.htm">DiagGetReport</a></td><td>
            Get diagnostics report from module.
            </td></tr><tr><td><a href="a6c63c68-62a4-b2c6-d11c-d18205efac4f.htm">DiagSetConfig</a></td><td>
            Set new diagnostics configuration.
            </td></tr><tr><td><a href="50cbe4c9-9d15-4fa6-5986-3955b0d62c8a.htm">DisablePhysicalAntenna</a></td><td><p>This function disables the physical antennas that are specified as comma separated string parameter.</p></td></tr><tr><td><a href="1f9f0a0a-7f0a-87a3-8e35-e564921ac224.htm">Disconnect</a></td><td>
            Disconnect current transport from device
            </td></tr><tr><td><a href="e5fd7b01-57fc-19e4-b9de-1eee10627409.htm">DisconnectAsync</a></td><td>
            Disconnect device async
            </td></tr><tr><td><a href="77d3ff3a-59ff-6cb1-fb3c-299c4d978735.htm">Dispose<span id="LST9496194F_66" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Dispose and free all allocated resources.
            </td></tr><tr><td><a href="6d86e417-04d3-fabb-71f5-57b9760d7091.htm">Dispose(Boolean)</a></td><td>Releases the unmanaged resources used by the <span class="selflink">NurApi</span> and optionally releases the managed resources</td></tr><tr><td><a href="a54caf6e-2d31-1ac2-0662-654bb2540418.htm">DLog(Func<span id="LST9496194F_67" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST9496194F_68" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes to data log.
            </td></tr><tr><td><a href="0128a8a0-cd35-e313-3324-e4e5e8fe2dce.htm">DLog(String)</a></td><td>
            Writes to data log.
            </td></tr><tr><td><a href="db5f4e0c-927e-b877-4263-cc59232c6b58.htm">ELog(Func<span id="LST9496194F_69" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST9496194F_70" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes text to log using LOG_ERROR level mask.
            </td></tr><tr><td><a href="47a7321d-ed4e-ef81-0681-3604765eac98.htm">ELog(String)</a></td><td>
            Writes text to log using LOG_ERROR level mask.
            </td></tr><tr><td><a href="8569480f-952a-0c1a-3f4c-952b64ed9856.htm">EnablePhysicalAntenna</a></td><td><p>This function enables the physical antennas that are specified as comma separated string parameter.</p><p>To enable all antennas, use parameter "ALL".</p></td></tr><tr><td><a href="6b46d4e2-99c6-2201-8c7a-6815207b1aad.htm">EnterBoot</a></td><td>
            Starts bootloader or Application
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="5abdab4f-b74f-127c-17c8-9b249f8e9471.htm">EraseSingulatedTag</a></td><td>
            Erase block in a tag specifically singulated.
            </td></tr><tr><td><a href="7766f5bc-c8f3-967c-03ca-f85ff75c9be7.htm">EraseTagByEPC</a></td><td>
            Erase block in a tag singulated by EPC.
            </td></tr><tr><td><a href="4348febc-d1aa-d967-13d4-30d751deb542.htm">ExecuteCommand</a></td><td>
            Excute NUR command
            </td></tr><tr><td><a href="69c29323-8186-c967-7142-069c4fc58bca.htm">ExecuteCommandAsync</a></td><td>
            Excute NUR command asyncronously
            </td></tr><tr><td><a href="90574496-6d36-5560-4cdc-1e9973eef6e6.htm">FactoryReset</a></td><td>
            Force RFID module to factory reset
            </td></tr><tr><td><a href="fcdcb4ae-916b-8fd4-e706-ce328d1c2ade.htm">FetchTagAt</a></td><td>
            Fetch a single tag based on "index" in reader tag memory.
            </td></tr><tr><td><a href="c7cefc92-8a16-1f51-d5ca-3790e02b2bbc.htm">FetchTags<span id="LST9496194F_71" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Fetch tags from reader memory. Meta data of tag is included.
            </td></tr><tr><td><a href="e111b0f1-e351-5a68-e1be-0199da7d830e.htm">FetchTags(Boolean)</a></td><td>
            Fetch tags from reader memory
            </td></tr><tr><td><a href="2d82bddf-e365-349d-cf12-b19f2bf3dd60.htm">FetchTags(Boolean, Int32<span id="LST9496194F_72" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Fetch tags from reader memory
            </td></tr><tr><td><a href="63b63702-160c-ee88-355c-441980ad05ce.htm">Finalize</a></td><td>
            Destructor
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.object.finalize#system-object-finalize" target="_blank" rel="noopener noreferrer">Object<span id="LST9496194F_73" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Finalize<span id="LST9496194F_74" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="622b976f-6566-fea1-11be-73f3b2bc3c27.htm">Gen2v2Authenticate(NurApi<span id="LST9496194F_75" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with no tag singulation in open state.
            </td></tr><tr><td><a href="b26898d1-7d81-38cc-a3ad-72dc42c30e45.htm">Gen2v2Authenticate(UInt32, NurApi<span id="LST9496194F_76" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with no tag singulation in secured state.
            </td></tr><tr><td><a href="8754349e-7834-53c9-5f4a-82d83bc7d9d8.htm">Gen2v2AuthenticateByEPC(<span id="LST9496194F_77" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_78" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_79" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with EPC singulation singulation in open state.
            </td></tr><tr><td><a href="f3a05feb-ecb5-ef2f-e378-80d528ad1f35.htm">Gen2v2AuthenticateByEPC(UInt32, <span id="LST9496194F_80" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_81" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_82" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with EPC singulation singulation in secured state.
            </td></tr><tr><td><a href="7c412b44-9997-29da-79eb-cd8ea6f53581.htm">Gen2v2AuthenticateSingulated(Byte, UInt32, Int32, <span id="LST9496194F_83" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_84" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_85" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with specific singulation parameters in open state.
            </td></tr><tr><td><a href="a908f631-0692-df58-97f6-bfc39a217a20.htm">Gen2v2AuthenticateSingulated(UInt32, Byte, UInt32, Int32, <span id="LST9496194F_86" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_87" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, NurApi<span id="LST9496194F_88" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AuthenticateParam)</a></td><td>
            Gen2 version 2 Authenticate command with specific singulation parameters in secured state.
            </td></tr><tr><td><a href="1c4114d0-01db-ad01-92e9-6a8f4c7840cf.htm">Gen2v2ReadBuffer</a></td><td><p>Gen2 version 2 ReadBuffer command without tag selection.</p><p>This is similar to the regular read command but the read data source is the version 2 tag's internal buffer.</p></td></tr><tr><td><a href="4fc76c58-8dad-d57f-2fb4-17029b59367e.htm">Gen2v2ReadBufferByEPC</a></td><td><p>Gen2 version 2 ReadBuffer command with the tag being selected by its EPC contents.</p><p>This is similar to the regular read command but the read data source is the version 2 tag's internal buffer.</p></td></tr><tr><td><a href="fd7c15db-ca3c-b025-6fea-06b9bd410694.htm">Gen2v2ReadBufferSingulated</a></td><td><p>Gen2 version 2 ReadBuffer command with specific tag selection.</p><p>This is similar to the regular read command but the read data source is the version 2 tag's internal buffer.</p></td></tr><tr><td><a href="a67de10f-10d5-2ee3-79e4-055e46c23b07.htm">Gen2v2Untraceable</a></td><td>
            Gen2 version 2 "Untraceable" command with no tag singulation.
            </td></tr><tr><td><a href="a053d749-d8a8-0950-c573-23ba92c7c4bd.htm">Gen2v2UntraceableByEPC</a></td><td>
            Gen2 version 2 "Untraceable" command with EPC selection.
            </td></tr><tr><td><a href="af5e5dad-858a-251f-2d1a-88faad122f51.htm">Gen2v2UntraceableSingulated</a></td><td>
            Gen2 version 2 "Untraceable" command with specific singulation parameters.
            </td></tr><tr><td><a href="aabd57aa-9adb-95d8-ae9b-0cabc797a9c4.htm">GetAccessPassword</a></td><td>
            Read access password from tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="649269ad-4e51-12f5-a3fb-086adeb84047.htm">GetAccessPasswordByEPC</a></td><td>
            Read access password from specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="08214cde-d41d-5180-078b-7f43535d1e7e.htm">GetAntennaIdTranslation</a></td><td><p>Returns the module's internal translation between physical antenna and logical antenna ID.</p></td></tr><tr><td><a href="5f47de0d-025c-8707-5e96-62a4f242174c.htm">GetAntennaList</a></td><td>
            List of available antennas
            </td></tr><tr><td><a href="3a73a50f-bc6c-d1a4-7a6f-a06c740f543e.htm">GetBitCount</a></td><td>
            Get count of bits set
            </td></tr><tr><td><a href="6da35002-7afd-211f-a2e2-896cc9808842.htm">GetCacheStats</a></td><td>
            Internal cache stats.
            </td></tr><tr><td><a href="b6a5ae7b-f205-4462-3e91-343613867527.htm">GetCustomHoptable</a></td><td>
            Get custom hoptable
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="ef447226-6606-0bed-cf7c-b96667a16d26.htm">GetCustomHoptableEx</a></td><td>
            Get extended custom hoptable
            </td></tr><tr><td><a href="bf6cd8dc-a0c8-7739-41dd-88a9c8cd9555.htm">GetDeviceCaps</a></td><td>
            Retrieves the device capabilities from the connected module.
            </td></tr><tr><td><a href="7cc3804b-37d3-9f77-b73e-f081602ed5a1.htm">GetEpcXpcSpec</a></td><td>
            Get the modified EPC based on the given PC contents.
            </td></tr><tr><td><a href="e6c550bb-e9d4-4750-60e7-368549b07051.htm">GetErrorMessage</a></td><td>
            Get Nur error code as string
            </td></tr><tr><td><a href="b3dd6942-8d02-57f7-4f6b-3f9db632187c.htm">GetEthConfig</a></td><td>
            Get Ethernet configuration settings from conneted device. 
            </td></tr><tr><td><a href="dc148568-8e59-8c82-1837-22b4a6017448.htm">GetFileVersion</a></td><td>
            The NurApi assembly version. Provided for compatibility, use NurApi.FileVersion instead
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="a220a7ef-b83d-d499-8653-5deb1fbc25b1.htm">GetFWINFO</a></td><td>
            Get FW building information string.
            </td></tr><tr><td><a href="d90f3870-0347-009c-b28b-7bd8cceadf6c.htm">GetGPIOConfig</a></td><td>
            Get NUR module GPIO configuration.
            </td></tr><tr><td><a href="458bd20d-824e-ca25-b942-f47f2661ee99.htm">GetGPIOStatus</a></td><td>
            Get single GPIO pin state.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode#system-object-gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="4ebbe1b5-32b9-ea8f-e57b-3a9e7195b743.htm">GetInventoryRead</a></td><td>
            Get Inventory read information.
            </td></tr><tr><td><a href="912eea4c-55f7-fb33-23ab-b073f64c9d0a.htm">GetKillPassword</a></td><td>
            Read kill password from tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="d283de3c-7c5b-a39c-a722-931575c03f56.htm">GetKillPasswordByEPC</a></td><td>
            Read kill password from specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="d10763e3-fcaf-dbfb-f87d-8507125a28f4.htm">GetLogFilePath</a></td><td>
            Get current log file path
            </td></tr><tr><td><a href="d06ad87f-9b1c-fbdd-c611-f26ac6d5b5f1.htm">GetLogLevel</a></td><td>
            Get Logging level
            </td></tr><tr><td><a href="6c6c6a01-eca6-5360-79dc-cc2f75f5f5af.htm">GetLogToFile</a></td><td>
            Get log to file enabled state.
            </td></tr><tr><td><a href="c2d2553d-e747-3513-5a15-5bf66f4374cf.htm">GetMode</a></td><td>
            Get running mode
            </td></tr><tr><td><a href="3ee7d6bc-e0ad-32a5-908e-00495304990a.htm">GetModuleSetup<span id="LST9496194F_89" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get current module setup
            </td></tr><tr><td><a href="a3713f9b-3fd3-a881-db7b-43099c8cadef.htm">GetModuleSetup(Int32)</a></td><td>
            Get current module setup
            </td></tr><tr><td><a href="0dce45b6-ac8b-ac38-b08f-01bc445eb562.htm">GetPhysicalAntennaMask</a></td><td>
            This function generates an antennaMask value from the passed physical antenna names. If parameter is invalid, an exception will be thrown
            </td></tr><tr><td><a href="32eedc1c-f71b-5db1-5c55-89c16e297079.htm">GetReaderInfo</a></td><td>
            Get reader info
            </td></tr><tr><td><a href="632a6b3a-22b9-4e64-645a-36053a9577a2.htm">GetReflectedPower<span id="LST9496194F_90" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get antenna reflected power info
            </td></tr><tr><td><a href="fcc137be-2d54-9c60-8617-af9f6c1f75bc.htm">GetReflectedPower(UInt32)</a></td><td>
            Get antenna reflected power info for specific frequency
            </td></tr><tr><td><a href="ae99bcfb-37bc-f233-c051-74e8ff5d63d2.htm">GetReflectedPowerValue<span id="LST9496194F_91" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get the reflected power as a floating point value from current region middle channel's frequency.
            </td></tr><tr><td><a href="076f11c2-36ae-96bf-60f0-720cddad7b87.htm">GetReflectedPowerValue(UInt32)</a></td><td>
            Returns the reflected power value for given frequency.
            A return value of -100 indicates that no reflected power was detected. This may indicate broken or bad antenna connection.
            </td></tr><tr><td><a href="17ce5e1a-9b58-3436-b13f-50c095839cd1.htm">GetRegionInfo</a></td><td>
            Get region info
            </td></tr><tr><td><a href="07e3209d-992e-8010-359e-dd6ab289dcb2.htm">GetSecChipFWINFO</a></td><td>
            Get secondary chip FW building information string.
            </td></tr><tr><td><a href="ae149f8f-d37b-2a76-e276-6b6fba1f6a46.htm">GetSensorConfig</a></td><td>
            Get sensor configuration
            </td></tr><tr><td><a href="bb96198b-ef1c-25e4-3a02-b14f95785f3f.htm">GetSystemInfo</a></td><td>
            Get system information.
            </td></tr><tr><td><a href="5f84880d-64f9-0f3a-64ed-74bf0fab41a6.htm">GetTagStorage</a></td><td>
            Get NurApi's internal tag storage.
            </td></tr><tr><td><a href="29a31b7b-4cda-6d23-0320-8f4c7db627fd.htm">GetTimeStamp</a></td><td>
            Get milliseconds after NurApi initialized
            </td></tr><tr><td><a href="3ea3a8c9-f466-fd22-cb15-c9e06149703a.htm">GetTransportStats</a></td><td>
            Internal transport stats.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype#system-object-gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="5f22eb0a-bf9d-6d50-d760-5f5541f9be5f.htm">GetVersions</a></td><td>
            Returns the current mode, primary and secondary version information.
            </td></tr><tr><td><a href="370c22d4-82cd-3f34-cf61-001f78db440c.htm">HexStringToBin(String)</a></td><td>
            Converts hex string to byte array.
            </td></tr><tr><td><a href="a45a0c7b-a3b5-246d-970d-b51d9beb5bb7.htm">HexStringToBin(String, String)</a></td><td>
            Converts hex string to byte array
            </td></tr><tr><td><a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_92" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Perform single tag inventory.<br />
            This function uses rounds, Q and session values from current module settings.
            <p>
            How it works:
            </p><p>
            The inventory operation returns information about the last inventory; it does not return tags.
            The inventory response <a href="c559e065-8b8f-6332-9593-62e3fa38e8b4.htm">NurApi<span id="LST9496194F_93" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryResponse</a> contains namely the number of tags that were found during last inventory and the number of tags that are stored into the module's memory.
            After exeuting an inventory the tags need to be first retrieved from the module by calling <a href="c7cefc92-8a16-1f51-d5ca-3790e02b2bbc.htm">FetchTags<span id="LST9496194F_94" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> or <a href="2d82bddf-e365-349d-cf12-b19f2bf3dd60.htm">FetchTags(Boolean, Int32<span id="LST9496194F_95" data-languageSpecificText="cpp=%"></span>)</a> and after that 
            the tags are available in the NurApi's tag storage, <a href="6b3b097f-a9d5-38ff-d6d7-17d2079008be.htm">NurApi<span id="LST9496194F_96" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TagStorage</a> that can be retrieved by the get tags storage command, see <a href="5f84880d-64f9-0f3a-64ed-74bf0fab41a6.htm">GetTagStorage<span id="LST9496194F_97" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            If the inventory needs to be "clean" the method for clearing the module's is <a href="c149abe5-699c-47eb-e480-1c40e99ed35e.htm">ClearTagsEx<span id="LST9496194F_98" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>. Calling this method also clears the NurApi's tag storage and module tag storage.
            </p></td></tr><tr><td><a href="2d46aab3-3a55-51d0-2fb4-cdab7ee7fe26.htm">Inventory(Int32, Int32, Int32)</a></td><td>
            Perform single inventory using specified rounds, Q  and session.
            <p>What inventory actually returns, see <a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_99" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>'s summary.</p></td></tr><tr><td><a href="4df50f2e-56e0-aa12-b567-e2d8a0e92fd5.htm">InventoryEx<span id="LST9496194F_100" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Re-run the extended inventory assuming that the module has stored the parameters earlier.
            </td></tr><tr><td><a href="8e7331a5-fb39-de80-2b85-64dc8e692d43.htm">InventoryEx(NurApi<span id="LST9496194F_101" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExParams, <span id="LST9496194F_102" data-languageSpecificText="cpp=array&lt;"></span>NurApi<span id="LST9496194F_103" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExFilter<span id="LST9496194F_104" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Extended inventory command with multiple select filters.
            </td></tr><tr><td><a href="e5a6ca73-1e03-8538-fb5e-a1038252c949.htm">InventoryEx(NurApi<span id="LST9496194F_105" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExParams<span id="LST9496194F_106" data-languageSpecificText="cpp=%"></span>, <span id="LST9496194F_107" data-languageSpecificText="cpp=array&lt;"></span>NurApi<span id="LST9496194F_108" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExFilter<span id="LST9496194F_109" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Extended inventory command with multiple select filters.
            </td></tr><tr><td><a href="56c02dc8-2092-95b1-57cd-94dcfc97a8cd.htm">InventoryRead</a></td><td>
            Setup inventory + read data.
            Call to this method only configures the inventory + read; it does not start it itself.
            This means that the inventory + read is done use during the next call to e.g. <a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_110" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> or <a href="2d46aab3-3a55-51d0-2fb4-cdab7ee7fe26.htm">Inventory(Int32, Int32, Int32)</a>.
            </td></tr><tr><td><a href="15ea8f7a-a178-3546-1f3f-8a5326bbe19e.htm">InventorySelect</a></td><td>
            Perform single inventory command with specific tag singulation. 
            <p>Tags can be singluted against desired memory bank and data mask.</p><p>What inventory actually returns, see <a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_111" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>'s summary.</p></td></tr><tr><td><a href="7223396c-705e-eb8e-4eb2-bc4963f209ca.htm">InventorySelectByEPC</a></td><td>
            Perform single inventory command with tag singulated against EPC. 
            <p>What inventory actually returns, see <a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_112" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>'s summary.</p></td></tr><tr><td><a href="d7497ba2-ab9d-cd38-8695-8eda422ac4d3.htm">IsConnected</a></td><td>
            This function will return only connection state of the transport layer.
            In order to know that module is responding, you'll need to communicate with module by calling e.g. <a href="973255b9-5e67-163c-edca-70a14a156a7b.htm">Ping<span id="LST9496194F_113" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            </td></tr><tr><td><a href="49443cdd-331a-4f1a-356e-6bd42b8fe0b2.htm">IsInventoryExRunning</a></td><td>
            Return true if streaming extended inventory routine is running.
            </td></tr><tr><td><a href="0f750991-a13a-1337-3977-6d0abd168eb1.htm">IsInventoryStreamRunning</a></td><td>
            Check if inventory stream routine is running.
            </td></tr><tr><td><a href="6e97a003-adb6-1998-aae6-fc81fe2bde51.htm">IsNXPAlarmStreamRunning</a></td><td>
            Return true if EAS Alarm stream routine is running on module.
            </td></tr><tr><td><a href="bdfd8194-a6ff-f97e-e2ee-55ed395f2da6.htm">IsPhysicalAntennaEnabled</a></td><td><p>This function returns true if all physical antennas specified in comma separated string are enabled, otherwise false is returned.</p></td></tr><tr><td><a href="fda1baaa-eca7-d8b9-3ab0-155fc79545ec.htm">IsTagError</a></td><td>
            Returns whether the given error is a tag backscattered error or not.
            </td></tr><tr><td><a href="68e0aedd-360c-2f9f-744c-765f43d4ffa8.htm">IsTraceRunning</a></td><td>
            Return TRUE if tag trace routine is running on module. 
            </td></tr><tr><td><a href="450f41ff-1460-ee64-f026-d8da8d71afa3.htm">KillTag</a></td><td>
            Kill tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="241bfd9a-4958-dab2-8180-b6d3c0a0bfbc.htm">KillTagByEPC</a></td><td>
            Kill specific tag singulated by tag's EPC memory.
            </td></tr><tr><td><a href="11c94586-2ab0-cca4-38a3-de17aa55767f.htm">Log(Int32, Func<span id="LST9496194F_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST9496194F_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes text to log for specified level.
            </td></tr><tr><td><a href="946eaf4b-807b-ecab-3f4e-c2fe73e0bfd1.htm">Log(Int32, String)</a></td><td>
            Writes text to log for specified level.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone#system-object-memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="131b0635-1c6d-cbe3-84f0-52a4ab684bde.htm">MemCompare</a></td><td>
            Comparing memory
            </td></tr><tr><td><a href="fdd17833-0987-bb25-038d-82b19b092e0d.htm">ModuleRestart</a></td><td>
            Force RFID module restart
            </td></tr><tr><td><a href="b7b622ea-a336-69ab-0f7a-63a44178882c.htm">Monza4QTRead</a></td><td>
            Monza4 QT command. Reads the QT_SR bit to <span class="parameter">reduce</span> and QT_MEM bit to <span class="parameter">pubmem</span>  .
            </td></tr><tr><td><a href="05a09b39-3844-a72b-b2ca-1569ca0a76bb.htm">Monza4QTWrite</a></td><td>
            Monza4 QT command. Writes the QT_SR and QT_MEM bits.
            </td></tr><tr><td><a href="93c90b6e-3eb1-a766-ee10-2a33a654ec0c.htm">NurAntennaIdToPhysicalAntenna</a></td><td><p>This function maps given logical antenna identifier to a physical name of an antenna.</p></td></tr><tr><td><a href="30db45d7-628a-28b3-d8e8-9dde895d9636.htm">NurPhysicalAntennaToAntennaId</a></td><td><p>This function maps given physical antenna name to an logical antenna identifier.</p></td></tr><tr><td><a href="fb332468-d352-e53f-9227-78d82a298203.htm">NXPAlarm</a></td><td>
            Send NXP EAS Alarm command. Return true when there's armed EAS tags in range of reader.
            </td></tr><tr><td><a href="81cbd94f-58ba-e516-6076-691195779018.htm">NXPResetEAS</a></td><td>
            Reset specific tag's EAS alarm bit to 0 with given singulation data. 
            When tag's EAS alarm bit is set to 1, tag will reply to EAS Alarm command.
            </td></tr><tr><td><a href="2bb00491-03e2-37ea-c177-f7a85b09ba95.htm">NXPResetReadProtect</a></td><td>
            Reset specific tag's read protect with given singulation data. 
            </td></tr><tr><td><a href="4945616c-644a-e95d-9303-837e15c9999e.htm">NXPSetEAS</a></td><td>
            Set specific tag's EAS alarm bit to 1 with given singulation data. 
            When tag's EAS alarm bit is set to 1, tag will reply to EAS Alarm command.
            </td></tr><tr><td><a href="1e291105-4e7c-43db-549d-12b50a42ec18.htm">NXPSetReadProtect</a></td><td>
            Set specific tag's read protect with given singulation data. 
            </td></tr><tr><td><a href="a7948dec-852f-cdce-8998-9701636a2bee.htm">NXPStartAlarmStream</a></td><td>
            Start NXP EAS Alarm streaming on module.
            Module will start continuos EAS Alarm stream and sends notification to host when there's armed tags in range.
            </td></tr><tr><td><a href="cedaa8cd-aeea-f830-1020-a65bbd01ca68.htm">NXPStopAlarmStream</a></td><td>
            Stop EAS Alarm streaming on module.
            </td></tr><tr><td><a href="e4478919-07de-d9a9-b8b0-a8a90e94778a.htm">OnApiConnectionStatusChanged</a></td><td> </td></tr><tr><td><a href="d89e5ca1-fcd8-38bb-b934-5a0c34b35f77.htm">OpenStateLock</a></td><td>
            Set tag lock using specified singulation parameters.
            Lock is done in open state i.e. without using password access.
            </td></tr><tr><td><a href="911ae61d-c950-93f4-7093-a054f3e0cf2d.htm">OpenStateLockByEPC</a></td><td>
            Set tag lock singulating it by the EPC contents.
            Lock is done in open state i.e. without using password access.
            </td></tr><tr><td><a href="c5084249-0e18-16af-ddcd-7ce318878fd1.htm">OpenStateLockRaw</a></td><td>
            Set memory lock for tag with specific singulation in open state i.e. without password access.
            <p>Tag can be singluted against desired memory bank and mask.</p><p>Lock mask and action parameter are in raw format defined in UHF C1G2 standard section "6.3.2.11.3.5 Lock (mandatory).</p></td></tr><tr><td><a href="973255b9-5e67-163c-edca-70a14a156a7b.htm">Ping</a></td><td>
            Performs ping to connected RFID module 
            </td></tr><tr><td><a href="f12c4fdc-010a-d86a-6351-f6286ff6ef00.htm">ReadPermalock</a></td><td>
            Read block permalock statuses without selecting a tag.
            Assume one tag in field.
            </td></tr><tr><td><a href="21255eca-cc1e-7606-4a34-b654e1525c4e.htm">ReadPermalockByEPC</a></td><td>
            Read block permalock statuses by selecting the tag by its EPC.
            </td></tr><tr><td><a href="64291ee6-492e-0498-ff2b-b1c1d29db9d0.htm">ReadPermalockSingulated</a></td><td>
            Read block permalock statuses by selecting the tag with specific singulation data.
            </td></tr><tr><td><a href="9a6f57d5-0bc1-a500-fbad-d1e09ebdb839.htm">ReadSingulatedTag(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_116" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_117" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, Byte)</a></td><td>
            Read data from tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="fc898b8d-30d9-91da-87ce-8c0d82e2cd8d.htm">ReadSingulatedTag(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_118" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_119" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, Int32)</a></td><td>
            Read data from tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="0e222096-988e-1351-e43f-9881dd374e59.htm">ReadTag</a></td><td>
            Read data from tag without any singulation data. This function can be used for tags that do not have an EPC.
            </td></tr><tr><td><a href="4ecaa760-6a56-dc49-0b25-1a1eb9b3be69.htm">ReadTagByEPC</a></td><td>
            Read data from tag singulated by tag's EPC memory.
            </td></tr><tr><td><a href="0e97149e-9eb3-e3ef-7be1-78085d868afc.htm">ResetToTarget</a></td><td>
            Reset tag inventoried flag to specific target in selected session.
            All tags in reader range will be reset.
            </td></tr><tr><td><a href="3e186fdf-d944-5fc6-bb64-5d5f8579cd4b.htm">RestartBLEModuleToDFU</a></td><td>
            Restart the BLE module to DFU (Device Firmware Upgrade) mode.<br />
            After the call, another application or built-in updater can upgrade the BLE module's FW.
            </td></tr><tr><td><a href="2d3db808-2b4f-79e5-54a1-3015c868e92b.htm">RestoreTuning</a></td><td>
            Restores the factory tuning to the module.
            Applies only to the NUR05WL2 and NUR10W modules.
            </td></tr><tr><td><a href="181bc453-d708-42de-0cfc-bd5543da006a.htm">ScanChannels<span id="LST9496194F_120" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Scan region channels RSSI
            </td></tr><tr><td><a href="8f2559d6-3a83-4b14-e4f8-66d4b648d394.htm">ScanChannels(Int32)</a></td><td>
            Scan region channels RSSI
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="0f52f06a-c966-436b-f74f-9c7b863796b6.htm">ScanSingle</a></td><td>
            The single scan is used to read a single tag's EPC contents using a timeout defined in milliseconds.
            </td></tr><tr><td><a href="8fe1f372-e9b5-4dec-3544-e48578b1241a.htm">SetAccessPassword(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_121" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_122" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a></td><td>
            Write new access password to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="790c258d-b6b2-dac0-69b3-067e989adda0.htm">SetAccessPassword(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_123" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_124" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a></td><td>
            Write new access password to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="e9004590-ac69-7486-d7a2-7659326b131d.htm">SetAccessPasswordByEPC</a></td><td>
            Write new access password to specific tag singulated by tag's EPC memory.
            </td></tr><tr><td><a href="76a17b09-299c-39a6-151d-15fbd6337f79.htm">SetAntennaIdTranslation</a></td><td><p>A method to change the module's internal mapping between the physsical and logical antenna identifiers.</p></td></tr><tr><td><a href="0f6ef412-c6ef-98ae-10bd-a13f4fc034b3.htm">SetConstantChannelIndex</a></td><td>
            Set channel index to use in current hop table.
            This prevents NUR from hopping in different channel.
            Use with care: RF frequency is locked as long as this is set.
            Restore normal channel hopping with parameter -1
            </td></tr><tr><td><a href="bfb4efa1-8f55-1f3b-a96d-873d78fc1054.htm">SetCustomHoptable</a></td><td>
            Set pre-built custom hop table.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="e64a924f-ba6d-6230-0fa6-84986da042a2.htm">SetCustomHoptableEx</a></td><td>
            Set pre-built, extended custom hop table (+LBT threshold and maximum TX level).
            </td></tr><tr><td><a href="9101d11e-adad-33ab-0e49-36a49d82e57e.htm">SetEthConfig</a></td><td>
            Set Ethernet device configuration.
            </td></tr><tr><td><a href="3b567526-34e2-b891-712a-50bdde13d663.htm">SetExtendedCarrier</a></td><td>
            Causes the module to leave carrier on after a command and not to jump to new frequency.
            The carrier on time is limited by the maximum channel time.
            </td></tr><tr><td><a href="366cdbdb-9466-061c-545c-75e5a9a91526.htm">SetGPIOConfig</a></td><td>
            Set NUR module GPIO configuration.
            </td></tr><tr><td><a href="efcda781-7de8-dee5-4178-1760337d4a44.htm">SetGPIOStatus</a></td><td>
            Set single GPIO pin state.
            <b>NOTE: GPIO must be configured as output</b></td></tr><tr><td><a href="43711d46-c33a-db8a-bf1f-2d30a78eaee1.htm">SetGPIOStatusMask</a></td><td>
            Set state for Gpio's specified by gpioMask<br />
            For example: value 0x50 set state for GPIO5 and GPIO7
            </td></tr><tr><td><a href="d298ec46-11e1-fc3a-c261-32b86082c29c.htm">SetHostFlags</a></td><td>
            Sends host flags to the module.
            </td></tr><tr><td><a href="f8e464ac-b922-f22b-8c91-749b5d37d341.htm">SetInventoryRead</a></td><td>
            Set Inventory read configuration.
            </td></tr><tr><td><a href="47fdee8e-9948-d2a4-48d5-762c5b1dc3f2.htm">SetKillPassword(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_125" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_126" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a></td><td>
            Write new kill password to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="b2586a48-0928-67a7-0b4c-0defecb2af85.htm">SetKillPassword(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_127" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_128" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32)</a></td><td>
            Write new kill password to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="e1f8c824-cf54-34f0-b5cd-5eb9f2fb015a.htm">SetKillPasswordByEPC</a></td><td>
            Write new kill password to specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="7cf1a7ad-8e71-7fe4-bacd-2177aa66b359.htm">SetLock(UInt32, Byte, UInt32, <span id="LST9496194F_129" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_130" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32)</a></td><td>
            Set memory lock for tag with specific singulation.
            </td></tr><tr><td><a href="c64bb363-0d11-2d74-3c0f-d1e861bd735b.htm">SetLock(UInt32, Byte, UInt32, Int32, <span id="LST9496194F_131" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_132" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32)</a></td><td>
            Set memory lock for tag with specific singulation.
            <p>Tag can be singluted against desired memory bank and mask.</p></td></tr><tr><td><a href="9615f8a9-81cf-25b9-b919-6dddaec35ba3.htm">SetLockByEPC</a></td><td>
            Set memory lock for specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="b98b4537-c8b3-0152-7b34-992855432e79.htm">SetLockRaw(UInt32, Byte, UInt32, <span id="LST9496194F_133" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_134" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32)</a></td><td>
            Set memory lock for tag with specific singulation.
            <p>Tag can be singluted against desired memory bank and mask.</p><p>Lock mask and action parameter are in raw format defined in UHF C1G2 standard section "6.3.2.11.3.5 Lock (mandatory).</p></td></tr><tr><td><a href="f38ba25a-0057-03c7-cf0e-6675fedc2044.htm">SetLockRaw(UInt32, Byte, UInt32, Int32, <span id="LST9496194F_135" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_136" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32)</a></td><td>
            Set memory lock for tag with specific singulation.
            <p>Tag can be singluted against desired memory bank and mask.</p><p>Lock mask and action parameter are in raw format defined in UHF C1G2 standard section "6.3.2.11.3.5 Lock (mandatory).</p></td></tr><tr><td><a href="7743997b-4417-b833-a759-93f7d7058db5.htm">SetLogFilePath</a></td><td>
            Set Log file path<br />     
            See <a href="8cee064a-5861-0833-97a3-c993fcabd648.htm">SetLogToFile(Boolean)</a></td></tr><tr><td><a href="00cb7d2a-35e0-0f3f-e53d-cde8c81b1900.htm">SetLogLevel</a></td><td>
            Set Logging level
            </td></tr><tr><td><a href="8cee064a-5861-0833-97a3-c993fcabd648.htm">SetLogToFile</a></td><td>
            Enables log generation to file. Default is "NurApiLog.txt" in to app working folder<br /> 
            To set path use <a href="7743997b-4417-b833-a759-93f7d7058db5.htm">SetLogFilePath(String)</a></td></tr><tr><td><a href="0b19116c-e968-49a3-9e23-a79bc40be0c9.htm">SetLogToStdout</a></td><td>
            Set log to stdout.
            </td></tr><tr><td><a href="0908acc9-7787-b263-3863-1c469642e09c.htm">SetModuleSetup</a></td><td>
            Set module settings according to given flags.
            </td></tr><tr><td><a href="75be04c6-aae6-123a-ab94-692efc4c62a5.htm">SetSensorConfig</a></td><td>
            Set sensor configuration
            </td></tr><tr><td><a href="8e75591e-1389-b1de-6ec0-ff4f5db30145.htm">SimpleInventory</a></td><td>
            Use <a href="fd799331-b9b8-9093-312d-21e68f6a6415.htm">Inventory<span id="LST9496194F_137" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> instead.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="e5efe05d-e4af-9dd2-8fcf-7d49a17ec886.htm">StartInventoryEx(NurApi<span id="LST9496194F_138" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExParams, <span id="LST9496194F_139" data-languageSpecificText="cpp=array&lt;"></span>NurApi<span id="LST9496194F_140" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExFilter<span id="LST9496194F_141" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Start extended inventory streaming command with multiple select filters.
            </td></tr><tr><td><a href="70fc9861-f190-4d1d-dcdd-99cade37efc0.htm">StartInventoryEx(NurApi<span id="LST9496194F_142" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExParams<span id="LST9496194F_143" data-languageSpecificText="cpp=%"></span>, <span id="LST9496194F_144" data-languageSpecificText="cpp=array&lt;"></span>NurApi<span id="LST9496194F_145" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryExFilter<span id="LST9496194F_146" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Start extended inventory streaming command with multiple select filters.
            </td></tr><tr><td><a href="4a2f56e7-d30d-1cd3-08aa-5f45dd39a7e7.htm">StartInventoryStream</a></td><td>
            Start inventory stream using RFID reader current rounds, Q, session settings. <a href="fadcc470-ff69-d538-b5a9-f5d74be7a9d0.htm">InventoryStreamEvent</a> is fired when data available. To stop inventory stream use <a href="62313e6d-1331-e22a-7f7e-b6e29ccc310e.htm">StopInventoryStream<span id="LST9496194F_147" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td></tr><tr><td><a href="db8f636a-5c70-56c0-6029-26d4ce841ea1.htm">StopContCarrier</a></td><td>
            Stop continuous carrier test.
            </td></tr><tr><td><a href="ee9e6292-a941-553d-196a-4cfbf0f6c05e.htm">StopContinuous</a></td><td>
            Force stop all NUR module running continuous functions.
            </td></tr><tr><td><a href="ad862713-3f59-1030-f79d-c41ac5cda8b7.htm">StopInventoryEx</a></td><td>
            Stop extended inventory streaming in module.
            </td></tr><tr><td><a href="62313e6d-1331-e22a-7f7e-b6e29ccc310e.htm">StopInventoryStream</a></td><td>
            Stop inventory streaming on module. 
            </td></tr><tr><td><a href="c792b921-b348-080c-02af-f46fa3e8fbc9.htm">StoreCurrentSetup<span id="LST9496194F_148" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Store current module settings to the reader's non-volatile memory.
            </td></tr><tr><td><a href="e5b6f098-cda7-a658-cb86-cf47cf35bdc0.htm">StoreCurrentSetup(Int32)</a></td><td>
            Store current module setup. Flags indicate which part of settings will be stored.
            </td></tr><tr><td><a href="a0ebb93f-95bd-f7a2-21b6-3a8607fa521b.htm">SwapEndian(UInt16)</a></td><td>
            Swap endianess of 16-bit value
            </td></tr><tr><td><a href="4d7b2d66-faed-f9f6-093c-2684944ba3c9.htm">SwapEndian(UInt32)</a></td><td>
            Swap endianess of 32-bit value
            </td></tr><tr><td><a href="d1b8c820-5d0e-77b5-74df-11fbc596b212.htm">TIDInventory</a></td><td>
            Setup TID inventory.
            Configures inventory + read so that it result only in TID data.
            </td></tr><tr><td><a href="4818a912-2dec-b724-6bc8-780992adb20e.htm">TimeStampToDate</a></td><td>
            Convert NurApi timestamp to DateTime
            </td></tr><tr><td><a href="b619c862-eece-1679-f7c6-b682b7ae0c23.htm">TimeStampToDateUtc</a></td><td>
            Convert NurApi timestamp to UTC DateTime
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring#system-object-tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="813696c5-98bd-99c8-7804-047d2d068cf2.htm">TraceTag</a></td><td>
            Trace singulated single tag. 
            </td></tr><tr><td><a href="076466f3-cde2-d571-8f44-bb01e21951d0.htm">TraceTagByEPC</a></td><td>
            Trace single tag singluated against tag's EPC memory.
            </td></tr><tr><td><a href="55cdf417-9bbe-aaa6-0dc0-1dac6fdc53bf.htm">TuneAntenna</a></td><td>
            Executes antenna tune sequence.
            </td></tr><tr><td><a href="ce31be4e-5686-6f39-fe52-c02d3463c9bd.htm">ULog(Func<span id="LST9496194F_149" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST9496194F_150" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes text to log using LOG_USER level mask.
            </td></tr><tr><td><a href="aa0f0647-67ca-da3b-23a5-c3b709045779.htm">ULog(String)</a></td><td>
            Writes text to log using LOG_USER level mask.
            </td></tr><tr><td><a href="81972e31-1dcd-0f57-b8c3-2a49c785dac9.htm">UserMemInventory</a></td><td>
            Setup user memory inventory.
            Configures inventory + read so that it result only in user memory data.
            </td></tr><tr><td><a href="017b8fff-6b3a-9f84-d7b5-50daa4c8062b.htm">VLog(Func<span id="LST9496194F_151" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LST9496194F_152" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes text to log using LOG_VERBOSE level mask.
            </td></tr><tr><td><a href="0e25eabb-8a73-af1e-94a8-a2f622164a7f.htm">VLog(String)</a></td><td>
            Writes text to log using LOG_VERBOSE level mask.
            </td></tr><tr><td><a href="e4451cde-e162-b219-c39d-7505223c4a54.htm">WriteEPC</a></td><td>
            Write new EPC to tag with specific singulation.This function sets also tag PC word correctly for new EPC length. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="ea694913-efe8-300d-c173-fbc4a03fcfb2.htm">WriteEPCByEPC(UInt32, Boolean, <span id="LST9496194F_153" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_154" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LST9496194F_155" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_156" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write new EPC to specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="af91f115-e30f-f13a-44e8-992ce36dc726.htm">WriteEPCByEPC(UInt32, Boolean, String, String)</a></td><td>
            Write new EPC to specific tag singulated by tag's EPC memory. 
            </td></tr><tr><td><a href="bb66eb4d-1ae8-6aa6-80d0-53189b9a962e.htm">WriteSingulatedTag(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_157" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_158" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_159" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_160" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="caa0d9b7-b4b6-5364-d2d4-357adf024f0a.htm">WriteSingulatedTag(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_161" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_162" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_163" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_164" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="090618c6-3492-7d23-64ac-00f621c962cc.htm">WriteSingulatedTag(UInt32, Boolean, Byte, UInt32, Int32, <span id="LST9496194F_165" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_166" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_167" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_168" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag with specific singulation. Tag can be singluted against desired memory bank and mask.
            </td></tr><tr><td><a href="cde1fd65-2bac-dd13-a1b0-20e24426ee5c.htm">WriteTag(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_169" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_170" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag without any singulation data. This function can be used for tags that do not have an EPC.
            <p>Note:If there's more than one tag in range, this function will most likely fail due to the RF collision.</p></td></tr><tr><td><a href="84dfe386-09e8-b2be-1fb8-3d3f0eee7276.htm">WriteTag(UInt32, Boolean, Byte, UInt32, <span id="LST9496194F_171" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_172" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag without any singulation data. This function can be used for tags that do not have an EPC.
            <p>Note:If there's more than one tag in range, this function will most likely fail due to the RF collision.</p></td></tr><tr><td><a href="0cbe7c32-dcca-f6e1-8c56-d8a42841f59a.htm">WriteTagByEPC(UInt32, Boolean, <span id="LST9496194F_173" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_174" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_175" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_176" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Write data to tag singulated by tag's EPC memory.         
            </td></tr><tr><td><a href="ed0986b4-2866-47ab-8a13-ba5f4bc149ca.htm">WriteTagByEPC(UInt32, Boolean, <span id="LST9496194F_177" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_178" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Byte, UInt32, <span id="LST9496194F_179" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST9496194F_180" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Write data to tag singulated by tag's EPC memory.         
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAFASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="1915e7cf-99c1-8b38-6f00-a5a3ebe6b5b4.htm">BootEvent</a></td><td>
            BootEvent
            </td></tr><tr><td><a href="b740a63d-0269-9766-ee9c-d02daadc73e5.htm">ConnectedEvent</a></td><td>
            Occurs when the reader is connected.
            </td></tr><tr><td><a href="b054635d-e5ab-edf4-5c58-44e71d928a78.htm">ConnectionStatusEvent</a></td><td>
            Transport status event fired when change happend in transportation between reader and NurApi
            </td></tr><tr><td><a href="7fe37efd-b60a-c87a-f587-1df7159c576b.htm">DiagReportEvent</a></td><td>
            DiagReportEvent
            </td></tr><tr><td><a href="cbb0ec4e-a69d-5b6b-5026-4de82e91d083.htm">DisconnectedEvent</a></td><td>
            Occurs when the reader is disconnected.
            </td></tr><tr><td><a href="ecbfec4c-c773-5c5e-e7d9-13326c7c7c89.htm">HopEvent</a></td><td>
            Frequency hop.
            </td></tr><tr><td><a href="5c241358-f922-efcf-4685-0c4c6a0b5e41.htm">InventoryExEvent</a></td><td>
            Tag data from extended inventory stream.
            </td></tr><tr><td><a href="fadcc470-ff69-d538-b5a9-f5d74be7a9d0.htm">InventoryStreamEvent</a></td><td>
            Tag data from inventory stream
            </td></tr><tr><td><a href="d8f0fe8e-461a-ff97-850b-5e154df0c524.htm">IOChangeEvent</a></td><td>
            IO Change event
            </td></tr><tr><td><a href="ba30ba68-dfde-704a-b47e-52f5878e2a38.htm">LogEvent</a></td><td>
            Occurs when the notification Log is received.
            </td></tr><tr><td><a href="8b4bd182-4c03-2dfd-d1ae-69b9583addf1.htm">NXPAlarmStreamEvent</a></td><td>
            NXP EAS Alarm state change.
            </td></tr><tr><td><a href="a0bd5404-918e-6b26-f3e9-948596144998.htm">OnAccBarcodeResult</a></td><td>
            Occurs when the Accessory sensor value range data is received.
            </td></tr><tr><td><a href="d8bd34e9-f159-488d-8972-f58fad3b2960.htm">OnAccRangeDataEvent</a></td><td>
            Occurs when the Accessory sensor value range data is received.
            </td></tr><tr><td><a href="7358d89c-6511-5bd7-d6aa-d2b23eda7bd5.htm">OnAccSensorChangedEvent</a></td><td>
            Occurs when the sensor is added or removed to/from reader.
            </td></tr><tr><td><a href="13af6e5f-76e1-87fa-9e6e-e081469c0933.htm">OnAccSensorToFFrBfaRawDataEvent</a></td><td>
            Occurs when the Accessory sensor value ToF FR BFA raw data is received.
            </td></tr><tr><td><a href="cb10a785-a107-9390-4c4d-2ba62716d10b.htm">TraceTagEvent</a></td><td>
            Tag data from trace tag
            </td></tr><tr><td><a href="9e57bf1b-7466-8e1d-8fb9-0b7bdafc1e97.htm">TriggerReadEvent</a></td><td>
            Triggered tag read.
            </td></tr><tr><td><a href="8cd28f40-6e1d-32db-f06a-8ee3e0562fce.htm">TuneEvent</a></td><td>
            The automatic tune event. 
            </td></tr><tr><td><a href="a44bfbc8-1950-68e4-3d8d-17f95ef8641e.htm">UnknownNotifyEvent</a></td><td>
            Occurs when the unknown notification is received.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDTFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="33a7fd18-16a1-1d1e-af8a-ffb465bb8d67.htm">AccBarcodeEncoding</a></td><td>
            Set/Get Barcode Encoding. Default UTF8
            </td></tr><tr><td><a href="1a937809-bd64-4760-6137-01f1f1056a20.htm">ANTENNAID_1</a></td><td>Antenna ID 1</td></tr><tr><td><a href="fdd1f496-4dba-44ce-54ca-3dc16e572937.htm">ANTENNAID_10</a></td><td>Antenna ID 10</td></tr><tr><td><a href="c67a4e8d-b813-7013-720d-83929b36b3e9.htm">ANTENNAID_11</a></td><td>Antenna ID 11</td></tr><tr><td><a href="0e2567b4-da32-1df8-7d52-209c7df754a3.htm">ANTENNAID_12</a></td><td>Antenna ID 12</td></tr><tr><td><a href="37c4a3dd-242a-143f-b721-74041a9d41ea.htm">ANTENNAID_13</a></td><td>Antenna ID 13</td></tr><tr><td><a href="f759f6f3-88e3-30da-c738-43ede20c11df.htm">ANTENNAID_14</a></td><td>Antenna ID 14</td></tr><tr><td><a href="c579204f-d93d-bcc0-d84f-c677a23a880a.htm">ANTENNAID_15</a></td><td>Antenna ID 15</td></tr><tr><td><a href="0d1bc648-8ebd-0d0f-7a6b-8193d2fa2d4e.htm">ANTENNAID_16</a></td><td>Antenna ID 16</td></tr><tr><td><a href="7b05d245-3d8d-bdb9-8824-869ac3b71f15.htm">ANTENNAID_17</a></td><td>Antenna ID 17</td></tr><tr><td><a href="59813ee4-ff0e-4a1c-4f92-a21bb48c7c8d.htm">ANTENNAID_18</a></td><td>Antenna ID 18</td></tr><tr><td><a href="cc3afaa8-321f-b094-1f93-c82972fe33b7.htm">ANTENNAID_19</a></td><td>Antenna ID 19</td></tr><tr><td><a href="43749fe6-5661-7247-a6f4-1b193b52006a.htm">ANTENNAID_2</a></td><td>Antenna ID 2</td></tr><tr><td><a href="253d01ff-97af-1bdc-cff0-c33552c5ee6d.htm">ANTENNAID_20</a></td><td>Antenna ID 20</td></tr><tr><td><a href="3dd3b4d1-3b8e-7e77-5a83-7bdf60d775af.htm">ANTENNAID_21</a></td><td>Antenna ID 21</td></tr><tr><td><a href="8ef889ae-2711-da8a-1a33-c462154e9151.htm">ANTENNAID_22</a></td><td>Antenna ID 22</td></tr><tr><td><a href="4a4db791-26ec-7e95-a4bb-8f9406e3763f.htm">ANTENNAID_23</a></td><td>Antenna ID 23</td></tr><tr><td><a href="9fe9b111-a6b9-eba1-ad96-5f03c60aa1fa.htm">ANTENNAID_24</a></td><td>Antenna ID 24</td></tr><tr><td><a href="3ba419fa-4c3f-388b-7f3c-fde87df73787.htm">ANTENNAID_25</a></td><td>Antenna ID 25</td></tr><tr><td><a href="f0edc574-3f9f-dc79-0c35-b08e86cd78ee.htm">ANTENNAID_26</a></td><td>Antenna ID 26</td></tr><tr><td><a href="a674d314-afc5-1ab4-8f92-28528f2c1ff1.htm">ANTENNAID_27</a></td><td>Antenna ID 27</td></tr><tr><td><a href="8a4a2635-5e22-6d3b-8cba-9c0c66992327.htm">ANTENNAID_28</a></td><td>Antenna ID 28</td></tr><tr><td><a href="8b8e05a2-9180-568b-0feb-faaadf7a9d0e.htm">ANTENNAID_29</a></td><td>Antenna ID 29</td></tr><tr><td><a href="88611ee3-4e4f-7983-9457-8ee5d95a3a59.htm">ANTENNAID_3</a></td><td>Antenna ID 3</td></tr><tr><td><a href="6b0b6772-6598-8501-c0b1-e7b815714807.htm">ANTENNAID_30</a></td><td>Antenna ID 30</td></tr><tr><td><a href="aa2252fa-340a-040a-bfc7-261d50804fcd.htm">ANTENNAID_31</a></td><td>Antenna ID 31</td></tr><tr><td><a href="61d439b5-e552-3cdb-370c-2d0af76e7347.htm">ANTENNAID_32</a></td><td>Antenna ID 32</td></tr><tr><td><a href="c90c08ae-6264-f1ce-09ce-5a18578c0540.htm">ANTENNAID_4</a></td><td>Antenna ID 4</td></tr><tr><td><a href="16d1673a-a117-870d-9ff2-dea3ac22f070.htm">ANTENNAID_5</a></td><td>Antenna ID 5</td></tr><tr><td><a href="43cfff8a-c1e2-19ec-99aa-cb7055992a68.htm">ANTENNAID_6</a></td><td>Antenna ID 6</td></tr><tr><td><a href="8cfb40f9-3056-d33d-7812-6b3a051352d5.htm">ANTENNAID_7</a></td><td>Antenna ID 7</td></tr><tr><td><a href="1b17078e-c863-fb77-8c25-9c6d841f5b08.htm">ANTENNAID_8</a></td><td>Antenna ID 8</td></tr><tr><td><a href="15915077-0ed4-77b0-6a91-f4920e47c849.htm">ANTENNAID_9</a></td><td>Antenna ID 9</td></tr><tr><td><a href="f426a5e6-e816-c867-c466-ebb7f132f70a.htm">ANTENNAID_AUTOSELECT</a></td><td>Auto switch antenna based on supported antenna count.</td></tr><tr><td><a href="53bc6907-9ce8-b149-1d3b-c70032b432e3.htm">ANTENNAMASK_1</a></td><td>Mask for antenna ID 1.</td></tr><tr><td><a href="5d1292aa-69a3-79b6-3396-737222f51fea.htm">ANTENNAMASK_10</a></td><td>Mask for antenna ID 10.</td></tr><tr><td><a href="2f239712-04c7-96ec-1d11-f8bd90c0cce6.htm">ANTENNAMASK_11</a></td><td>Mask for antenna ID 11.</td></tr><tr><td><a href="78675730-8aca-6929-7570-77ba38c2909a.htm">ANTENNAMASK_12</a></td><td>Mask for antenna ID 12.</td></tr><tr><td><a href="a8bc6f69-f44d-1693-965e-42a1b2239833.htm">ANTENNAMASK_13</a></td><td>Mask for antenna ID 13.</td></tr><tr><td><a href="feccb91d-c78a-ea69-8429-ee5a74d9792a.htm">ANTENNAMASK_14</a></td><td>Mask for antenna ID 14.</td></tr><tr><td><a href="5541240a-f8ce-0f64-cd1b-14b50fa2d376.htm">ANTENNAMASK_15</a></td><td>Mask for antenna ID 15.</td></tr><tr><td><a href="3a33b8d3-f68e-6bff-f494-0940b11d81b4.htm">ANTENNAMASK_16</a></td><td>Mask for antenna ID 16.</td></tr><tr><td><a href="4b32823b-7c92-293a-58ea-26844661151a.htm">ANTENNAMASK_17</a></td><td>Mask for antenna ID 17.</td></tr><tr><td><a href="f89afaf3-47aa-b13b-58e8-39589fe2dd93.htm">ANTENNAMASK_18</a></td><td>Mask for antenna ID 18.</td></tr><tr><td><a href="76366537-e4a3-fa28-391e-51264ee54386.htm">ANTENNAMASK_19</a></td><td>Mask for antenna ID 19.</td></tr><tr><td><a href="0aef49ca-05a9-585c-b12b-aaf489664762.htm">ANTENNAMASK_2</a></td><td>Mask for antenna ID 2.</td></tr><tr><td><a href="963d188a-d0d5-e1bd-ac0d-6cddc0d0a685.htm">ANTENNAMASK_20</a></td><td>Mask for antenna ID 20.</td></tr><tr><td><a href="391ee6d0-acca-5872-2665-33aecb3e29e3.htm">ANTENNAMASK_21</a></td><td>Mask for antenna ID 21.</td></tr><tr><td><a href="6497e231-a72f-100b-8d74-7e33401019bc.htm">ANTENNAMASK_22</a></td><td>Mask for antenna ID 22.</td></tr><tr><td><a href="8f17645f-c1df-c8c5-6fc2-0b50cbe60de6.htm">ANTENNAMASK_23</a></td><td>Mask for antenna ID 23.</td></tr><tr><td><a href="a2fdc94e-d8af-20cd-d114-44f9fe3a52e2.htm">ANTENNAMASK_24</a></td><td>Mask for antenna ID 24.</td></tr><tr><td><a href="a1b0e7fd-e909-4f70-df11-65df833c8550.htm">ANTENNAMASK_25</a></td><td>Mask for antenna ID 25.</td></tr><tr><td><a href="508d3b11-0b2e-2ca9-cee3-75a4a0684dbd.htm">ANTENNAMASK_26</a></td><td>Mask for antenna ID 26.</td></tr><tr><td><a href="1e0815f3-a24d-a0a7-00ac-4b588301a0a7.htm">ANTENNAMASK_27</a></td><td>Mask for antenna ID 27.</td></tr><tr><td><a href="18d2f150-eb1a-2a0f-8e97-bcad7f4dc674.htm">ANTENNAMASK_28</a></td><td>Mask for antenna ID 28.</td></tr><tr><td><a href="ad4c6df5-605e-0488-03d0-8f69706bac93.htm">ANTENNAMASK_29</a></td><td>Mask for antenna ID 29.</td></tr><tr><td><a href="a9f58a8f-2069-2198-dc0b-f6a87d761007.htm">ANTENNAMASK_3</a></td><td>Mask for antenna ID 3.</td></tr><tr><td><a href="e7a32208-36a3-b62c-6801-ae2bd68b0792.htm">ANTENNAMASK_30</a></td><td>Mask for antenna ID 30.</td></tr><tr><td><a href="683dc254-e0de-3744-5b88-fab810678faf.htm">ANTENNAMASK_31</a></td><td>Mask for antenna ID 31.</td></tr><tr><td><a href="6776bf5f-898c-1320-54a9-874bd8c621d5.htm">ANTENNAMASK_32</a></td><td>Mask for antenna ID 32.</td></tr><tr><td><a href="3b87cb2a-5083-ca64-fcc0-a70867e8ac98.htm">ANTENNAMASK_4</a></td><td>Mask for antenna ID 4.</td></tr><tr><td><a href="59d39095-5daf-8993-3d99-5bbbb7ccae07.htm">ANTENNAMASK_5</a></td><td>Mask for antenna ID 5.</td></tr><tr><td><a href="1fd1dd48-67f2-48c2-f813-436d9b4be816.htm">ANTENNAMASK_6</a></td><td>Mask for antenna ID 6.</td></tr><tr><td><a href="89fd5ef3-a965-c89a-cd7a-c54a0bba37ea.htm">ANTENNAMASK_7</a></td><td>Mask for antenna ID 7.</td></tr><tr><td><a href="2cd1c768-3bdc-2972-b1c9-22f8a5a88bd3.htm">ANTENNAMASK_8</a></td><td>Mask for antenna ID 8.</td></tr><tr><td><a href="38afb2c4-6690-1634-8891-f4de10acf431.htm">ANTENNAMASK_9</a></td><td>Mask for antenna ID 9.</td></tr><tr><td><a href="fedfb840-274e-922f-33ae-7cef672118ba.htm">ANTENNAMASK_ALL</a></td><td>All antennas  mask IDs combined</td></tr><tr><td><a href="eb42f1de-98fc-d164-d79f-72e38b760bb1.htm">AT_BAND0</a></td><td> Band 0 frequency in kHz</td></tr><tr><td><a href="5bf5ea76-84a0-9111-ade6-c56e40861f1c.htm">AT_BAND1</a></td><td> Band 1 frequency in kHz </td></tr><tr><td><a href="ae884349-8c2f-bba7-cd7e-2eb327dce1ac.htm">AT_BAND2</a></td><td> Band 2 frequency in kHz</td></tr><tr><td><a href="cabf3eb9-66e9-4e5e-0a9d-11f4e6b0a8f1.htm">AT_BAND3</a></td><td> Band 3 frequency in kHz </td></tr><tr><td><a href="866b4658-fb74-8f17-efe9-d05e0e622816.htm">AT_BAND4</a></td><td> Band 4 frequency in kHz </td></tr><tr><td><a href="416cfc49-0aac-48c3-69e6-d14812f2b59e.htm">AT_BAND5</a></td><td> Band 5 frequency in kHz </td></tr><tr><td><a href="b27af6b1-7d82-b177-0c3c-5fbd5307c41c.htm">AT_BANDWIDTH</a></td><td> A single band's width in kHz </td></tr><tr><td><a href="30f1624b-5d01-5de4-858b-3efc6a16f890.htm">AT_LAST_BAND</a></td><td> Last antenna tune band number. </td></tr><tr><td><a href="a56dd6aa-47de-b9ce-6915-b4baf4408224.htm">AT_LOWEST_BANDNUM</a></td><td> Lowest band number. </td></tr><tr><td><a href="3e1f7f59-8cbf-1e51-8658-004d685c93ab.htm">AT_NR_OF_BANDS</a></td><td> Number of bands that antenna tuning occurs in. </td></tr><tr><td><a href="cd057bc8-589c-2e50-aad6-1cefbfc581e9.htm">AUTOTUNE_MODE_ENABLE</a></td><td>Enable autotune procedure during RF operations.</td></tr><tr><td><a href="c7ab4cab-ddcb-793f-a0dd-83dbe17b0ae0.htm">AUTOTUNE_MODE_THRESHOLD_ENABLE</a></td><td>Enable dBm threshold for autotune procedure.</td></tr><tr><td><a href="89060461-4429-170b-4a0e-3f95598bbc79.htm">BANK_EPC</a></td><td>EPC memory bank.</td></tr><tr><td><a href="c2519493-8e6c-924b-7623-211a46683aeb.htm">BANK_PASSWD</a></td><td>Password memory bank.</td></tr><tr><td><a href="8d1749e4-8089-e68b-8c11-4434ba5fc6c5.htm">BANK_TID</a></td><td>TID memory bank.</td></tr><tr><td><a href="98d18fd5-ca61-24f5-68f8-1eb0bdbdf2b1.htm">BANK_USER</a></td><td>User memory bank.</td></tr><tr><td><a href="cb3b7fe2-1e99-8a5d-e053-763594a3a2ed.htm">BR_1000000</a></td><td>Baudrate 1000 000 bps</td></tr><tr><td><a href="a940ce2a-a1a5-4d5e-be08-8dad5773a5ca.htm">BR_115200</a></td><td>Baudrate 115200 bps</td></tr><tr><td><a href="9f42ebc7-ac94-113e-2c43-66152c304d85.htm">BR_1500000</a></td><td>Baudrate 1500 000 bps</td></tr><tr><td><a href="ebd21d6b-24af-1c4f-7901-6ccf0cd8e025.htm">BR_230400</a></td><td>Baudrate 230400 bps</td></tr><tr><td><a href="7ce1d25d-86a4-b996-5de0-0174c37ff0f6.htm">BR_38400</a></td><td>Baudrate 38400 bps</td></tr><tr><td><a href="15d91892-835b-b17d-e4eb-e513b5302c93.htm">BR_500000</a></td><td>Baudrate 500000 bps</td></tr><tr><td><a href="ca57baef-0892-c3c3-c1a0-12930322f469.htm">BR_9600</a></td><td>Baudrate 9600 bps</td></tr><tr><td><a href="8c31b61c-7bc1-85b7-a314-8420ae661a7b.htm">CHERR_CHTIME</a></td><td>
            Custom hop table command error code: Invalid custom hoptable channel time
            </td></tr><tr><td><a href="34b9f3f9-46b9-88b4-2852-2a6e7f514602.htm">CHERR_COUNT</a></td><td>
            Custom hop table command error code: Invalid custom hoptable channel count
            </td></tr><tr><td><a href="c6709015-b716-ed39-4d04-33776d897f56.htm">CHERR_FREQ</a></td><td>
            Custom hop table command error code: Encountered invalid frequency in custom hoptable
            </td></tr><tr><td><a href="6ffb3ff2-d74a-457b-a9d6-0d51e3ff6c0f.htm">CHERR_LBT</a></td><td>
            Custom hop table command error code: Encountered invalid LBT threshold
            </td></tr><tr><td><a href="12bb7dc6-0793-d628-6a33-341c527a6f31.htm">CHERR_LF</a></td><td>
            Custom hop table command error code: Invalid custom hoptable max LF
            </td></tr><tr><td><a href="5cc73b22-2127-953d-0623-f4c82dd60ade.htm">CHERR_PAUSETIME</a></td><td>
            Custom hop table command error code: Invalid custom hoptable pause time
            </td></tr><tr><td><a href="e80c0984-d063-7220-1a6f-f254f3e8c593.htm">CHERR_SIZE</a></td><td>
            Custom hop table command error code: Custom hoptable size mismatch
            </td></tr><tr><td><a href="ba8650cc-12a2-57b7-c932-c23239942f91.htm">CHERR_TARI</a></td><td>
            Custom hop table command error code: Invalid custom hoptable Tari
            </td></tr><tr><td><a href="4d3517b8-d0c4-cf1e-c0f2-5567632b9fca.htm">CHERR_TXLIMIT</a></td><td>
            Custom hop table command error code: Encountered invalid maximum TX level
            </td></tr><tr><td><a href="8e87efdb-16be-da77-2637-2bef06c1ab57.htm">CHIPVER_AS3992</a></td><td>
            Chip version AS3992.
            </td></tr><tr><td><a href="e50c2f50-f1c5-de0b-b750-1537682f2d34.htm">CHIPVER_AS3993</a></td><td>
            Chip version AS3993.
            </td></tr><tr><td><a href="6bb51cfa-fe80-4357-853e-eb5f29af669f.htm">CHIPVER_E310</a></td><td>
            Chip version impinj E310
            </td></tr><tr><td><a href="ec36b61e-8732-fe4a-364d-8f8accdc14ef.htm">CHIPVER_E510</a></td><td>
            Chip version impinj E510
            </td></tr><tr><td><a href="ab570834-06da-ddb8-eb03-a1c3bd607f0e.htm">CHIPVER_E710</a></td><td>
            Chip version impinj E710
            </td></tr><tr><td><a href="e29b72e7-228d-8970-5d64-f1f292461647.htm">CHIPVER_E910</a></td><td>
            Chip version impinj E910
            </td></tr><tr><td><a href="171c5480-5a69-4acb-6470-5b08682b2088.htm">CHIPVER_R2000</a></td><td>
            Chip version R2000.
            </td></tr><tr><td><a href="07250395-8fda-add7-d3a5-ec59fde3a7c9.htm">CHIPVER_R2000D</a></td><td>
            Chip version R2000 direct
            </td></tr><tr><td><a href="e337883b-929b-2898-9ac8-a5369a2c0a93.htm">CUSTHT_TARI_125</a></td><td> Custom hoptable's Tari setting 12.5us. </td></tr><tr><td><a href="48aa76f9-e8bf-d34d-6832-f1a393fba992.htm">CUSTHT_TARI_25</a></td><td> Custom hoptable's Tari setting 25us. </td></tr><tr><td><a href="36255ce8-c3a0-8de5-0673-a37ae03f94fc.htm">CXF_ASWRITE</a></td><td>
            Custom exchange flag: Act if this was a write operation
            </td></tr><tr><td><a href="441508e7-8e89-eb33-18af-44fe4909fe10.htm">CXF_CRC5</a></td><td>
            Custom exchange flag: TX uses CRC-5 instead of CRC-16.
            </td></tr><tr><td><a href="a95c8b9d-1021-2f0f-fed4-9a1052b757d9.htm">CXF_NORXCRC</a></td><td>
            Custom exchange flag: Do not decode RX CRC, return the response as is.
            </td></tr><tr><td><a href="62422a8b-716a-fbc3-136c-77252f6424d2.htm">CXF_NORXLEN</a></td><td>
            Custom exchange flag: Unknown RX length. RX length is ignored.
            </td></tr><tr><td><a href="500e9d16-e9cb-8370-6d2d-94dcbd9eb41e.htm">CXF_NOTXCRC</a></td><td>
            Custom exchange flag: No TX CRC.
            </td></tr><tr><td><a href="aa9f5ca9-762f-622c-fff5-0c590555ecff.htm">CXF_SKIPRESEL</a></td><td>
            Custom exchange flag: Skip tag re-selection during the custom exchange.
            </td></tr><tr><td><a href="735c547f-5cba-8482-9a66-541f60c859b8.htm">CXF_STRIPHND</a></td><td>
            Custom exchange flag: Leave out the bacscattered handle in the response.
            </td></tr><tr><td><a href="aab04f13-7955-9a38-7c50-bb05f278d2e2.htm">CXF_TXONLY</a></td><td>
            Custom exchange flag: Transmit only. No response is expected.
            </td></tr><tr><td><a href="3b43efe9-9209-5182-f9ae-aa1968979217.htm">CXF_USEHANDLE</a></td><td>
            Custom exchange flag: RN16 resulting from sinulation shall be appended to the bit stream
            </td></tr><tr><td><a href="c01dd7fd-e378-bf47-eb22-7442d580dc19.htm">CXF_XORRN16</a></td><td>
            Custom exchange flag: if CXF_ASWRITE == '1' and TX bit length == 16, XOR the TX data with RN16 received from the tag access.
            </td></tr><tr><td><a href="d81088e1-1759-6ba8-180e-260d5abc2564.htm">DEFAULT_BAUDRATE</a></td><td>Default baudrate 115200 bps</td></tr><tr><td><a href="384d79d0-dcb2-c86c-3f6b-1eda15658bf0.htm">DIAG_CFG_FW_DEBUG_LOG</a></td><td>
            Diagnostics config flag: Module sends verbose debug log messages. Messages are prefixed with "FW:".
            </td></tr><tr><td><a href="64ee70fe-09c7-c9ab-6313-4d34bc15cbfd.htm">DIAG_CFG_FW_ERROR_LOG</a></td><td>
            Diagnostics config flag: Module sends error log messages. Messages are prefixed with "FW:".
            </td></tr><tr><td><a href="3931195e-d071-9253-8095-44b0db9fa8a9.htm">DIAG_CFG_NOTIFY_NONE</a></td><td>
            Diagnostics config flag: Never send diagnostics report notification.
            </td></tr><tr><td><a href="b2e8d485-601b-e373-ab63-ccd33fc5685b.htm">DIAG_CFG_NOTIFY_PERIODIC</a></td><td>
            Diagnostics config flag: Send diagnostics report notification periodically.
            </td></tr><tr><td><a href="11660a67-72a0-79b3-e982-f01f743d420e.htm">DIAG_CFG_NOTIFY_WARN</a></td><td>
            Diagnostics config flag: Send diagnostics report notification on warning/error.
            </td></tr><tr><td><a href="c500dfa7-cd69-54b2-1343-aff0c674a6ba.htm">DIAG_GETREPORT_NONE</a></td><td>
            Diagnostics get flag: None
            </td></tr><tr><td><a href="66f29be9-edc4-f57a-a8f7-481fae12035a.htm">DIAG_GETREPORT_RESET_STATS</a></td><td>
            Diagnostics get flag: Reset all diagnostics statistics to zero.
            </td></tr><tr><td><a href="fded7679-ffc0-7139-4abf-7c09955bd5b4.htm">DIAG_REPORT_LOWVOLT</a></td><td>
            Diagnostics return flag: Set in DiagReport.flags if low voltage is detected. All RF operations will fail with error NUR_ERROR_LOW_VOLTAGE in this stage.
            </td></tr><tr><td><a href="8c39c420-fd61-7056-4efc-a4a278ffeb38.htm">DIAG_REPORT_PERIODIC</a></td><td>
            Diagnostics return flag: Set in DiagReport.flags when module sends periodic report.
            </td></tr><tr><td><a href="da240050-3fbe-0eee-88ea-1ad11649f3d5.htm">DIAG_REPORT_TEMP_HIGH</a></td><td>
            Diagnostics return flag: Set in DiagReport.flags if module temperature is high. Host application SHOULD stop performing RF operations for a while.
            </td></tr><tr><td><a href="0b116bfc-9146-7860-6156-c7d0ae322e6e.htm">DIAG_REPORT_TEMP_OVER</a></td><td>
            Diagnostics return flag: Set in DiagReport.flags if module temperature is over limits. All RF operations will fail with error NUR_ERROR_OVER_TEMP in this stage.
            </td></tr><tr><td><a href="3d57ab3a-45b5-bb54-eb7d-db5047102c38.htm">FACTION_0</a></td><td>
            Filter action for extended inventory: 
            Matching tags: assert SL or inventoried session flag -&gt; A. Non-matching: deassert SL or inventoried session flag -&gt; B.
            </td></tr><tr><td><a href="d59c9111-7efb-3836-5640-addfcb498b37.htm">FACTION_1</a></td><td>
            Filter action for extended inventory: 
            Matching tags: assert SL or inventoried session flag -&gt; A. Non-matching: do nothing.
            </td></tr><tr><td><a href="87160ef3-ceaf-b5b0-98c8-2bd5d9952b46.htm">FACTION_2</a></td><td>
            Filter action for extended inventory: 
            Matching tags: do nothing. Non-matching: deassert SL or inventoried session -&gt; B.
            </td></tr><tr><td><a href="9067069b-1412-34ce-a71c-f37b907bc443.htm">FACTION_3</a></td><td>
            Filter action for extended inventory: 
            Matching tags: negate SL or invert inventoried session flag (A-&gt;B, B-&gt;A). Non-matching: do nothing.
            </td></tr><tr><td><a href="32a8e821-2989-8183-5b5d-3b49f3963513.htm">FACTION_4</a></td><td>
            Filter action for extended inventory: 
            Matching tags: deassert SL or inventoried session flag -&gt; B. Non-matching: assert SL or inventoried session flag -&gt; A.
            </td></tr><tr><td><a href="e4079622-46bb-9d85-f2ca-b00b81ca0aea.htm">FACTION_5</a></td><td>
            Filter action for extended inventory: 
            Matching tags: deassert SL or inventoried session flag -&gt; B. Non-matching: do nothing.
            </td></tr><tr><td><a href="922aa6ae-55f3-6e85-55a2-dc23c4b463c8.htm">FACTION_6</a></td><td>
            Filter action for extended inventory: 
            Matching tags: do nothing. Non-matching: assert SL or inventoried session flag -&gt; A.
            </td></tr><tr><td><a href="481b4c89-1765-92af-720e-b179f4ae7b53.htm">FACTION_7</a></td><td>
            Filter action for extended inventory: 
            Matching tags: do nothing. Non-matching: negate SL or invert inventoried session flag (A-&gt;B, B-&gt;A).
            </td></tr><tr><td><a href="477f9295-2bc6-faa3-4171-784f15671d82.htm">FW_INFO_REQUEST_SEC_CHIP</a></td><td>
            Parameter value used in GetSecChipFWINFO when requesting secondary chip FW info
            </td></tr><tr><td><a href="46d39ad0-5bf3-691c-c02a-2d7fab14daeb.htm">GEN2V2_MAX_AUTHBITS</a></td><td> Gen2 version 2 "Authenticate": maximum bit length of the message. </td></tr><tr><td><a href="a7c1bb2e-b36b-8687-54e8-b59eede7fb39.htm">GEN2V2_MAX_AUTHBYTES</a></td><td> Gen 2 version 2 "Authenticate": maximum byte length of the message. </td></tr><tr><td><a href="5dce4e3b-6c10-f1dc-e2c0-3ea39ed9e27d.htm">GEN2V2_MIN_AUTHBITS</a></td><td> Gen2 version 2 "Authenticate": minimum bit length of the message. </td></tr><tr><td><a href="7d55af0a-0b78-c75a-d6ac-124cc7b236c3.htm">GPIO_ACT_INVENTORY</a></td><td>
            Start inventory on GPIO/sensor change. Result is received with <a href="fadcc470-ff69-d538-b5a9-f5d74be7a9d0.htm">InventoryStreamEvent</a> notification.
            </td></tr><tr><td><a href="2de8d12b-9e3d-3611-3541-f4189595b11b.htm">GPIO_ACT_NONE</a></td><td>
            No action. GPIO state can be read manually.
            </td></tr><tr><td><a href="96abb7c8-5121-b15e-59e8-1e25eef2b31e.htm">GPIO_ACT_NOTIFY</a></td><td>
            Send <a href="d8f0fe8e-461a-ff97-850b-5e154df0c524.htm">IOChangeEvent</a> notification on GPIO/sensor change.
            </td></tr><tr><td><a href="c43f1a34-a516-81db-af64-f8a2194845f1.htm">GPIO_ACT_SCANTAG</a></td><td>
            Start single tag scan on GPIO/sensor change. Tag result is received with <a href="9e57bf1b-7466-8e1d-8fb9-0b7bdafc1e97.htm">TriggerReadEvent</a> notification.
            </td></tr><tr><td><a href="6efd96c1-6bc4-0369-0efe-0ad14d18502d.htm">GPIO_EDGE_BOTH</a></td><td>
            Trigger IO's configured action on both edges of IO
            </td></tr><tr><td><a href="4023a9a6-629a-4497-df4d-488657f00d75.htm">GPIO_EDGE_FALLING</a></td><td>
            Trigger IO's configured action on falling edge of IO
            </td></tr><tr><td><a href="4f025fdb-7d2c-97e6-7876-f3e36d94fc7c.htm">GPIO_EDGE_RISING</a></td><td>
            Trigger IO's configured action on rising edge of IO
            </td></tr><tr><td><a href="1eab0a36-7351-4d46-d079-50a672a4c3d2.htm">GPIO_TYPE_ANTCTL1</a></td><td>
            GPIO is configured as antenna control 1 (bit0)
            </td></tr><tr><td><a href="f9054573-1cec-db11-7988-ee825ba016b6.htm">GPIO_TYPE_ANTCTL2</a></td><td>
            GPIO is configured as antenna control 2 (bit1)
            </td></tr><tr><td><a href="6e595ea2-9d76-1e25-a0b5-12a1ad0f7396.htm">GPIO_TYPE_BEEPER</a></td><td>
            GPIO will act as a beeper (high active)
            </td></tr><tr><td><a href="0b351f7a-6c9e-1986-16a9-befcecdb3ec7.htm">GPIO_TYPE_INPUT</a></td><td>
            GPIO is configured as input pin.
            </td></tr><tr><td><a href="d3f1962c-95c2-308b-003c-e76d11e6917b.htm">GPIO_TYPE_OUTPUT</a></td><td>
            GPIO is configured as output pin.
            </td></tr><tr><td><a href="af335e12-f048-18f6-2cb9-9855605c2191.htm">GPIO_TYPE_RFIDON</a></td><td>
            GPIO will act as a Sampo S1 RFID on led (high active)
            </td></tr><tr><td><a href="15b732dd-19ca-b07c-1e83-56a3a2a2b294.htm">GPIO_TYPE_RFIDREAD</a></td><td>
            GPIO will act as a Sampo S1 RFID read led (high active)
            </td></tr><tr><td><a href="1c1f3266-2f5b-20b3-b555-45763538e5cd.htm">GPIO1</a></td><td>
            Module GPIO 1
            </td></tr><tr><td><a href="819eacf9-f0d5-c05b-71eb-242d6f4b6a43.htm">GPIO2</a></td><td>
            Module GPIO 2
            </td></tr><tr><td><a href="66643551-106f-9b8d-223a-f49460cd837f.htm">GPIO3</a></td><td>
            Module GPIO 3
            </td></tr><tr><td><a href="8f8044a1-ec75-004f-2621-1f086dc1006f.htm">GPIO4</a></td><td>
            Module GPIO 4
            </td></tr><tr><td><a href="d6abb0e6-3cce-3c39-b6b5-664186de8b35.htm">GPIO5</a></td><td>
            Module GPIO 5
            </td></tr><tr><td><a href="5994f640-44a0-0981-b018-d1b3fa6e0d1b.htm">GPIO6</a></td><td>
            Module GPIO 6
            </td></tr><tr><td><a href="7e90a4b4-787f-6ad8-71a2-aec34d0ecbab.htm">GPIO7</a></td><td>
            Module GPIO 7
            </td></tr><tr><td><a href="34b6fbc9-ae37-2d3d-4ab6-e34e415eaf1d.htm">GPIO8</a></td><td>
            Module GPIO 8
            </td></tr><tr><td><a href="3f5a43f6-56af-eae2-e810-ab181c07296b.htm">HOSTFLAGS_EN_UNSOL_ACK</a></td><td>
            When set, module sends ACK request with unsolicited packets.
            </td></tr><tr><td><a href="f4211ffd-de09-babd-8164-9eb3eab931db.htm">INVALID_HANDLE_VALUE</a></td><td>Invalid handle value (-1)</td></tr><tr><td><a href="085aa2e6-b71b-776d-dd5f-907d41262670.htm">INVTARGET_A</a></td><td>
            Query tags with inventoried flag set to A
            </td></tr><tr><td><a href="4fafffb0-c99b-baeb-8197-c431e3dd7adf.htm">INVTARGET_AB</a></td><td>
            Query tags with inventoried flag set to A or B
            </td></tr><tr><td><a href="1ccfb2ea-673f-23f9-c21b-9df6b4add553.htm">INVTARGET_B</a></td><td>
            Query tags with inventoried flag set to B
            </td></tr><tr><td><a href="9ee3ba45-f708-5206-cea4-1a4847bbc0bb.htm">LAST_ANTENNAID</a></td><td>Last valid antenna ID</td></tr><tr><td><a href="55200ed0-f7e1-1bd5-f06c-5c0ea0a9cc62.htm">LOCK_ACCESSPWD</a></td><td>Access password memory lock mask.</td></tr><tr><td><a href="9ee8ee78-f74f-a332-fb08-6583eeccbeff.htm">LOCK_EPCMEM</a></td><td>EPC memory bank lock mask.</td></tr><tr><td><a href="32bc8915-9f77-f280-5215-57ee448c1c8f.htm">LOCK_KILLPWD</a></td><td>Kill password memory lock mask.</td></tr><tr><td><a href="5573858c-d7ea-615e-3a95-87eb7fea5d24.htm">LOCK_OPEN</a></td><td>Associated memory bank is readable from open/secured states.</td></tr><tr><td><a href="4c494137-ed08-19ac-297b-2a936988f54b.htm">LOCK_PERMALOCK</a></td><td>Associated memory bank is not writable from any state.</td></tr><tr><td><a href="43c1bcc5-63a2-c921-5dc7-fc6842d0e74d.htm">LOCK_PERMAWRITE</a></td><td>Associated memory bank is permanently writable from open/secured states and may never be locked.</td></tr><tr><td><a href="eb502781-fbb6-91da-feda-992ff9e83cc9.htm">LOCK_SECURED</a></td><td>Associated memory bank is writable only from secured state.</td></tr><tr><td><a href="2b430119-a5b9-999f-663d-e28a9a855db4.htm">LOCK_TIDMEM</a></td><td>TID memory bank lock mask.</td></tr><tr><td><a href="3ae8937f-98d8-e559-90ec-bcfb779d0ff3.htm">LOCK_USERMEM</a></td><td>User memory bank lock mask.</td></tr><tr><td><a href="14edf958-3516-5362-ab1c-6efdf6a880a9.htm">LOG_ALL</a></td><td>All items are logged</td></tr><tr><td><a href="e0d3c148-47d6-4405-018a-425b4c024217.htm">LOG_DATA</a></td><td>Log level data. Data items are shown in the log</td></tr><tr><td><a href="63bc5c52-6310-9e3e-2a8e-21efaa1c4497.htm">LOG_ERROR</a></td><td>Log level Error. Errors are logged</td></tr><tr><td><a href="0b2a529a-0b6e-d988-0c4e-68c0b2d4b247.htm">LOG_USER</a></td><td>Log level User. User defined log items</td></tr><tr><td><a href="b466c351-3ad3-461a-0116-708433dba9d1.htm">LOG_VERBOSE</a></td><td>Log level Verbose</td></tr><tr><td><a href="ae7e76ef-2e34-9b76-f738-36dc676052dc.htm">MAX_ANTENNAS</a></td><td>Maximum number of antennas.</td></tr><tr><td><a href="0a5a5db3-8cee-b1e0-a197-02aff846858c.htm">MAX_ANTENNAS_EX</a></td><td>Maximum number of antennas in extended version.</td></tr><tr><td><a href="f41b93e3-ed8b-b620-41cf-f5b58bf76c2b.htm">MAX_AUTHRESPBITS</a></td><td> Gen2 version 2 "Authenticate": maximum expected RX length in bits. </td></tr><tr><td><a href="e01ce141-05d1-59dc-7506-90c4ebcce539.htm">MAX_BITSTR_BITS</a></td><td>
            Maximum number of bits in the custom bit stream.
            </td></tr><tr><td><a href="55f53bc5-7b83-1b35-3057-31875935ad28.htm">MAX_BLOCKLOCK_WORDS</a></td><td>
            Maximum number of block permalock words in response or lock parameter.
            </td></tr><tr><td><a href="8df9df62-0e85-8d86-3d65-04d28dfc1f01.htm">MAX_CONFIG_REGIONS</a></td><td>
            Maximum number of regions.
            </td></tr><tr><td><a href="fee84f62-6285-a601-e681-bc09f612c429.htm">MAX_CUSTOM_FREQS</a></td><td> Maximum number of custom frequencies in custom hop table. </td></tr><tr><td><a href="aeba3cfc-7ca3-4643-1c85-eff2b17d54cb.htm">MAX_EE_EPCLEN</a></td><td>
            Maximum length of an enumerated EPC.
            </td></tr><tr><td><a href="1beab09f-3059-545c-5499-d72e0caa8b5f.htm">MAX_EE_TIDLEN</a></td><td>		
            Maximum length of assigned TID data in EPC enumeration.
            </td></tr><tr><td><a href="c9009c72-014a-2a8c-cd39-73158b2c88bd.htm">MAX_EPC_LENGTH</a></td><td>
            Maximum length of EPC data in bytes.
            </td></tr><tr><td><a href="a128c6e8-033a-b709-cc20-cf743413aaf2.htm">MAX_EPC_LENGTH_EX</a></td><td>
            Maximum length of EPC data in bytes with extended tag data.
            </td></tr><tr><td><a href="2479ee9d-9e72-6e5a-40d5-147f83508bcb.htm">MAX_FCCID_LENGTH</a></td><td> Max fccId length. </td></tr><tr><td><a href="466fb586-7915-877d-6990-7d081122b544.htm">MAX_FILTERS</a></td><td> Maximum number of extended inventory filters. </td></tr><tr><td><a href="00598935-ea98-b3c8-64aa-9bf3acdfd347.htm">MAX_FREQUENCY</a></td><td> Maximum value of custom hop table frequency in kHz. </td></tr><tr><td><a href="e609a710-c189-17cc-54df-18e7fd24790b.htm">MAX_GPIO</a></td><td>
            Maximum number of GPIOs.
            </td></tr><tr><td><a href="24bedcaa-4d85-36c3-a8da-b025413fb6f9.htm">MAX_HWVER_LENGTH</a></td><td> Max hwVer length. </td></tr><tr><td><a href="bdb4d400-e059-3494-3b84-aed430c04b9f.htm">MAX_IRDATA_LENGTH</a></td><td>
            Maximum length of associated inventory read data
            </td></tr><tr><td><a href="d025d02b-6980-f506-e63b-118545f10333.htm">MAX_MAPPINGLEN</a></td><td>
            Maximum name of an antenna mapping.
            </td></tr><tr><td><a href="b3150e65-9818-08e3-7fa7-8321590aa111.htm">MAX_NAME_LENGTH</a></td><td> Max name length. </td></tr><tr><td><a href="18b3c41d-c97b-f063-ea57-fabab52145bf.htm">MAX_PAUSETIME</a></td><td> Maximum value of custom hop table pause time. </td></tr><tr><td><a href="50cb80e0-5090-0863-0323-2cdf55fb79a4.htm">MAX_REGION_NAME</a></td><td>
            Maximum length of region name in bytes.
            </td></tr><tr><td><a href="71dc832f-6f5a-3cfc-e4f0-ad7c7f1775a5.htm">MAX_SCRATCHBYTES</a></td><td> Maximum number of bytes to write into a scratch page. </td></tr><tr><td><a href="d2a6c698-3677-5940-4ebe-8ca4503325b8.htm">MAX_SCRATCHPAGE</a></td><td> Last available user scratch data page in the module. </td></tr><tr><td><a href="d343beca-bb10-33a0-fdbc-c643ec913665.htm">MAX_SELMASK</a></td><td>
            Maximum length of Select mask data in bytes.
            </td></tr><tr><td><a href="a1f0471a-b09e-5429-d89d-bee7a47d4d6f.htm">MAX_SERIAL_LENGTH</a></td><td> Max serial length. </td></tr><tr><td><a href="5e50bb4c-a936-f8ea-34d1-9bcc960ae11a.htm">MAX_TAM_OFFSET</a></td><td> ISO29167-10 authentication: maximum block offset/address value. </td></tr><tr><td><a href="49e1960e-77ce-8c01-2018-7dc1451e3a49.htm">MAX_WLAN_PROFILE_INDEX</a></td><td> Maximum allowed WLAN profile index. </td></tr><tr><td><a href="992db41e-4bd1-b3fa-7b2f-ad3c84aca632.htm">MAXN_ANTMAPPINGS</a></td><td>
            Maximum number of antenna mappings.
            </td></tr><tr><td><a href="f277237b-6115-e9fa-2a5b-5a7206c99d80.htm">MIN_FREQUENCY</a></td><td> Minimum value of custom hop table frequency in kHz. </td></tr><tr><td><a href="502ea61e-c213-3493-910c-076b1ede772f.htm">MIN_LBT_THRESHOLD</a></td><td>Minimum value for the LBT threshold parameter in <a href="e64a924f-ba6d-6230-0fa6-84986da042a2.htm">SetCustomHoptableEx(<span id="LST9496194F_181" data-languageSpecificText="cpp=array&lt;"></span>UInt32<span id="LST9496194F_182" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, UInt32, UInt32, UInt32, UInt32, UInt32, Int32, UInt32)</a>.</td></tr><tr><td><a href="af7f467d-9247-6e54-9897-9db79be080fa.htm">MIN_LBTTHRESH</a></td><td> Minimum LBT threshold </td></tr><tr><td><a href="30b3bb82-449b-354f-c21a-36870106abcc.htm">MIN_SCRATCHBYTES</a></td><td> Minimum number of bytes to write into a scratch page. </td></tr><tr><td><a href="7153b73d-12df-3ab0-f9ea-bfa195983c7f.htm">MIN_SCRATCHPAGE</a></td><td> First available user scratch data page in the module. </td></tr><tr><td><a href="52f9ec33-72aa-2123-f162-5312f66bec03.htm">MODULETYPE_NUR05W</a></td><td>
            Module type NUR05W.
            </td></tr><tr><td><a href="d198aa81-e61a-9616-a1c2-2f498ebeb3e1.htm">MODULETYPE_NUR05WL</a></td><td>
            Module type NUR05WL.
            </td></tr><tr><td><a href="d4e789f5-a372-495a-a7c2-b099b85d8ec4.htm">MODULETYPE_NUR05WL2</a></td><td>
            Module type NUR05WL2.
            </td></tr><tr><td><a href="6cdc3fe8-52b6-571b-4e83-de165b94c27a.htm">MODULETYPE_NUR10W</a></td><td>
            Module type NUR10W (1W module).
            </td></tr><tr><td><a href="4818784f-88a7-6c7c-8f8e-88da33055a1d.htm">MODULETYPE_NUR2_01W</a></td><td>
            Module type nanoNUR-01W
            </td></tr><tr><td><a href="0c2bdf05-cbd7-6c5e-d71d-d71148d7f762.htm">MODULETYPE_NUR2_1W</a></td><td>
            Module type NUR2-1W (1W module).
            </td></tr><tr><td><a href="94d6c104-46fe-3d58-9aa6-de387f16cda1.htm">MODULETYPE_NUR3_RSVD</a></td><td>
            Reserved
            </td></tr><tr><td><a href="0b58886f-f768-efc8-5323-862ddd693222.htm">MODULETYPE_NUR3FR_1W</a></td><td>
            Module type FR22 integrated nur3
            </td></tr><tr><td><a href="d667a089-cee6-d34c-90b2-5f05e894a28e.htm">MODULETYPE_NUR3MOD_1W</a></td><td>
            Module type NUR3-1W
            </td></tr><tr><td><a href="7c2c0cff-8594-0bc6-6437-d244a3fcc045.htm">NUR_AUTOPER_25</a></td><td>
            Auto-inventory has one second off time.
            </td></tr><tr><td><a href="b17262b9-5583-dda2-739e-ad07d9bde38e.htm">NUR_AUTOPER_33</a></td><td>
            Auto-inventory has 500ms off time.
            </td></tr><tr><td><a href="e1539486-13a9-42a2-f50c-6c1dcb6d4647.htm">NUR_AUTOPER_50</a></td><td>
            Auto-inventory has 100ms off time.
            </td></tr><tr><td><a href="3c0ad963-4a8e-8add-4e88-b519b55b15cf.htm">NUR_AUTOPER_FORCE_1000MS</a></td><td>
            Force 1s sleep
            </td></tr><tr><td><a href="58ebd255-025d-826d-aadd-7ba66236fe2b.htm">NUR_AUTOPER_FORCE_100MS</a></td><td>
            Force 100ms sleep
            </td></tr><tr><td><a href="7e9d02cb-9f3b-cd0a-6250-03d83f83537e.htm">NUR_AUTOPER_FORCE_500MS</a></td><td>
            Force 500ms sleep
            </td></tr><tr><td><a href="fb1eb8be-a6ac-2a97-92eb-4b5751147f43.htm">NUR_AUTOPER_OFF</a></td><td>
            Auto-inventory off.
            </td></tr><tr><td><a href="93471d84-265a-7e91-46fa-3e80ee4011f4.htm">NUR_DC_ANTENNAMAP</a></td><td>
            This module provides antenna mapping information.
            </td></tr><tr><td><a href="cf031084-a79f-53cd-06bf-bbc57dc88cdb.htm">NUR_DC_ANTPOWER</a></td><td>
            This module supports per antenna power setting.
            </td></tr><tr><td><a href="6aef3aea-0781-13f8-d870-ad6f0d1ebe2f.htm">NUR_DC_ANTTUNE</a></td><td>
            The antenna or antennas in this device can be tuned.
            </td></tr><tr><td><a href="aa752238-2fe7-09d1-6df2-06a882c0ab5d.htm">NUR_DC_BEAMANTENNA</a></td><td>
            This module supports beam forming antenna.
            </td></tr><tr><td><a href="de499474-2250-3790-f16a-071876098748.htm">NUR_DC_CHSCANNER</a></td><td>
            This module can run channel scan.
            </td></tr><tr><td><a href="78b9581d-3265-1dc5-c3ab-bcb638062453.htm">NUR_DC_DIAG</a></td><td>
            Bit is set if this module FW supports diagnostics commands.
            </td></tr><tr><td><a href="a83e5a05-8cf4-6d93-d0c9-5fb7fcf82aac.htm">NUR_DC_FETCHSINGLE</a></td><td>
            This module supports fetching tags one by one.
            </td></tr><tr><td><a href="b731cfd9-0aef-0f40-468a-25d68f2fc498.htm">NUR_DC_GEN2VER2</a></td><td>
            Bit is set if this module support Gen 2 version 2 commands (at least partly).
            </td></tr><tr><td><a href="a69664af-57aa-acef-b0c8-afe98c07f3a4.htm">NUR_DC_HASBEEP</a></td><td>
            The device has beeper available.
            </td></tr><tr><td><a href="1907df6f-8469-75b4-313b-2e5ae45306bb.htm">NUR_DC_HASLIGHT</a></td><td>
            The device has light sensor available.
            </td></tr><tr><td><a href="1a2342ab-116e-229d-2b77-0613b9b2814b.htm">NUR_DC_HASTAP</a></td><td>
            The device has tap sensor available.
            </td></tr><tr><td><a href="944e540c-d802-e2b9-3832-2c5a5cee935b.htm">NUR_DC_INVREAD</a></td><td>
            This module supports inventory + read.
            </td></tr><tr><td><a href="37405a77-2d3f-dcac-3706-c773698d4d25.htm">NUR_DC_POWEROFS</a></td><td>
            This module supports per antenna low power setting offset -1...1.
            </td></tr><tr><td><a href="6bd6b478-168a-2c67-893c-40ba6b13ec50.htm">NUR_DC_RFPROFILE</a></td><td>
            Bit is set if this module FW supports RF profile setting.
            </td></tr><tr><td><a href="ffdd85e9-4e0a-6c2a-e941-8d583cef02e0.htm">NUR_DC_RXDECFM0</a></td><td>
            RX modulation FM0.
            </td></tr><tr><td><a href="af6dead5-d5b4-ece6-dcd6-6dd98d074f7e.htm">NUR_DC_RXDECM2</a></td><td>
            RX modulation Miller-2.
            </td></tr><tr><td><a href="54b59cfc-556f-4419-92ed-23e5b6158d7b.htm">NUR_DC_RXDECM4</a></td><td>
            RX modulation Miller-4.
            </td></tr><tr><td><a href="abbf8bb7-53c2-2a3d-b0f1-c7d6007e60f9.htm">NUR_DC_RXDECM8</a></td><td>
            RX modulation Miller-8.
            </td></tr><tr><td><a href="361cd200-25b4-168a-b0c7-9d68731e4121.htm">NUR_DC_RXLF160k</a></td><td>
            Backscatter LF of 160kHz.
            </td></tr><tr><td><a href="62f19407-7907-1618-c23c-51532bc97b2d.htm">NUR_DC_RXLF256k</a></td><td>
            Backscatter LF of 256kHz.
            </td></tr><tr><td><a href="9716294d-6ab2-3023-9385-b9a133002cfc.htm">NUR_DC_RXLF320k</a></td><td>
            Backscatter LF of 320kHz.
            </td></tr><tr><td><a href="05291e09-8126-7bda-1699-f25b698eafed.htm">NUR_DC_RXLF40k</a></td><td>
            Backscatter LF of 40kHz.
            </td></tr><tr><td><a href="1854dfb0-4e63-059f-ecf3-0f2701b99f02.htm">NUR_DC_RXLF640k</a></td><td>
            Backscatter LF of 640kHz.
            </td></tr><tr><td><a href="842bed4b-eef9-d604-5dda-66449304b008.htm">NUR_DC_RXLF80k</a></td><td>
            Backscatter LF of 80kHz.
            </td></tr><tr><td><a href="b0eaf27f-83bb-8669-c627-e22b834768ea.htm">NUR_DC_RXLFres1</a></td><td>
            Reserved LF 1.
            </td></tr><tr><td><a href="28cbbfaf-7970-0b0b-cec2-9b093d61f0c9.htm">NUR_DC_RXLFres2</a></td><td>
            Reserved LF 2.
            </td></tr><tr><td><a href="0002a3ba-d4c4-9932-0c79-97bc951f4998.htm">NUR_DC_TAGPHASE</a></td><td>
            Bit is set if this module FW supports tag phase info. see OPFLAGS_EN_TAG_PHASE
            </td></tr><tr><td><a href="bf5ac040-42a3-14e4-ac5e-4cf2ef00b443.htm">NUR_IR_DATAONLY</a></td><td>
            Inventory read is the type of data only (placed into the EPC field).
            </td></tr><tr><td><a href="6fd7a713-f25a-432c-48da-2d88fb528b15.htm">NUR_IR_EPCDATA</a></td><td>
            Inventory read is the type of EPC + data.
            </td></tr><tr><td><a href="c8774202-8f1c-72d0-9551-3da1d80e9fe8.htm">NUR_IR_EPCXTID</a></td><td>
            The XTID based read is appended to the EPC data.
            </td></tr><tr><td><a href="74283190-2066-ef4e-7fb8-7e134e5369a2.htm">NUR_IR_XTID_EX_FLAG</a></td><td>
            The flag bit in the inventory + read type that tells whether the TID contents is included in whole or serial only.
            </td></tr><tr><td><a href="47346cfe-4b8e-35b9-40c8-a7eae14a49f5.htm">NUR_IR_XTIDONLY</a></td><td>
            The XTID based read result is returned in place of the EPC data.
            </td></tr><tr><td><a href="9fe18d3a-fc62-bb91-0297-da1431245d50.htm">OPFLAGS_EN_EXACT_BLF</a></td><td>        
            Return exact BLF in Hz in tag meta data frequency field. Supported only in NUR L2 modules.
            </td></tr><tr><td><a href="12563a94-e2e3-9826-b3d5-12ae47fc1bec.htm">OPFLAGS_EN_HOPEVENTS</a></td><td>        
            Notification NUR_NOTIFICATION_HOPEVENT is enabled.
            </td></tr><tr><td><a href="2871b6ce-fe84-4865-9d7b-f70b4a29078e.htm">OPFLAGS_EN_IR_MEM_OVERRUN</a></td><td>
            Inventory read will report EPC even if there is memory overrun error (f.ex. no user mem bank)
            </td></tr><tr><td><a href="0860d357-20b2-7a20-14ed-3187a65001af.htm">OPFLAGS_EN_NXP_BID</a></td><td>
            NXP Brand ID in NXP UCODE8 tag is enabled
            </td></tr><tr><td><a href="e7835505-b5e4-1c61-d8ff-04bbea1d4182.htm">OPFLAGS_EN_PHASE_DIFF</a></td><td>
            Return tag phase angle difference in units of tenths of degrees in tag meta data timestamp field. Supported only in NUR3 modules.
            </td></tr><tr><td><a href="28f535ad-b66a-4bf1-7907-11bf91e4c978.htm">OPFLAGS_EN_TAG_PHASE</a></td><td>        
            Return tag phase angle in units of tenths of degrees in tag meta data timestamp field. Supported only in NUR2 modules.
            </td></tr><tr><td><a href="7c91beb1-9036-3df2-8dfa-5ff853bf0622.htm">OPFLAGS_EN_TUNEEVENTS</a></td><td><p>Set this flag to enable the run-time tuning events.</p><p>See also the ,  and .</p></td></tr><tr><td><a href="b84cdb76-14c8-7c0d-2998-a1b6841f3b14.htm">OPFLAGS_INVSTREAM_ZEROS</a></td><td>
            Inventory stream frunction will report zero count inventory rounds also.
            </td></tr><tr><td><a href="91a8a2f3-5027-0f7a-6a91-12871a6c9982.htm">REGIONID_AUSTRALIA</a></td><td>
            Region ID: Australia
            </td></tr><tr><td><a href="7241927b-682d-2679-cd95-cb3ced7f2f73.htm">REGIONID_BRAZIL</a></td><td>
            Region ID: Brazil
            </td></tr><tr><td><a href="12c114bd-bde8-4d6e-10e9-18cd634cad17.htm">REGIONID_CURRENT</a></td><td>
            Region ID: Represent current region set in to module
            </td></tr><tr><td><a href="c7cd9a3b-c48e-aff7-e6f3-bd5780f8aa58.htm">REGIONID_CUSTOM</a></td><td>
            Region ID: custom
            </td></tr><tr><td><a href="1fec166f-b321-eb72-9191-8928863bba71.htm">REGIONID_EU</a></td><td>
            Region ID: Europe
            </td></tr><tr><td><a href="3cb8880c-268b-2d00-58bd-ba4edd07c49f.htm">REGIONID_FCC</a></td><td>
            Region ID: North-America
            </td></tr><tr><td><a href="56c71237-6481-0a72-40b2-73ba3f586f13.htm">REGIONID_HONGKONG</a></td><td>
            Region ID: Hong Kong.
            </td></tr><tr><td><a href="eaa0882a-a4af-50e5-c172-572dd6fa985e.htm">REGIONID_INDIA</a></td><td>
            Region ID: India.
            </td></tr><tr><td><a href="a76795d6-20c4-35fa-9125-bcb68b08b8f0.htm">REGIONID_ISRAEL</a></td><td>
            Region ID: Israel.
            </td></tr><tr><td><a href="81795f6e-e321-49e5-8278-5877f4e3d450.htm">REGIONID_JA250MW</a></td><td>
            Region ID: Japan 250mW LBT
            </td></tr><tr><td><a href="e390c0da-acbb-6572-93a5-c81f3b9e6a8a.htm">REGIONID_JA500MW</a></td><td>
            Region ID: Japan 500mW DRM
            </td></tr><tr><td><a href="9a6647b4-5122-e923-70bf-032704d7eeeb.htm">REGIONID_KOREA</a></td><td>
            Region ID: Korean LBT.
            </td></tr><tr><td><a href="46144a4a-ef60-64a7-d1b9-2efe6acc2846.htm">REGIONID_KOREA_LBT</a></td><td>
            Region ID: Korean LBT. For compatibility
            </td></tr><tr><td><a href="d2aa13d5-82bd-51d1-38ce-186ab83cba4f.htm">REGIONID_LAST</a></td><td>
            Last region ID.
            </td></tr><tr><td><a href="a2615b65-2132-db14-4c99-e0ca0fa14215.htm">REGIONID_MALAYSIA</a></td><td>
            Region ID: Malaysia
            </td></tr><tr><td><a href="b324a4d5-6587-dc5c-6e7e-ea30bf25ac57.htm">REGIONID_MOROCCO</a></td><td>
            Region ID: Morocco.
            </td></tr><tr><td><a href="9e678ed4-9fa0-84d0-4e8b-b903bb88706b.htm">REGIONID_NEWZEALAND</a></td><td>
            Region ID: New Zealand
            </td></tr><tr><td><a href="c80511a6-0a5d-c8d9-dcd9-0300e0a50aed.htm">REGIONID_PERU</a></td><td>
            Region ID: Peru.
            </td></tr><tr><td><a href="d7774ca8-0180-c605-6e4b-d720c8306803.htm">REGIONID_PHILIPPINES</a></td><td>
            Region ID: Philippines. For compatibility.
            </td></tr><tr><td><a href="b9c1f23f-0e58-cdf0-7ef6-31764d908e94.htm">REGIONID_PRC</a></td><td>
            Region ID: People's Republic of China (Upper Band)
            </td></tr><tr><td><a href="dd350d19-6087-6835-4485-5bf850972169.htm">REGIONID_RUSSIA</a></td><td>
            Region ID: Russian (EU with first channel missing).
            </td></tr><tr><td><a href="0a2c4409-3a47-b029-580a-fd40e0d93240.htm">REGIONID_SINGAPORE</a></td><td>
            Region ID: Singapore.
            </td></tr><tr><td><a href="c25d2f3e-a741-65fe-3299-d6105fb29235.htm">REGIONID_THAILAND</a></td><td>
            Region ID: Thailand. For compatibility.
            </td></tr><tr><td><a href="4256e7ea-9a07-b13f-f99a-a2015e36c62b.htm">REGIONID_VIETNAM</a></td><td>
            Region ID: Vietnamese.
            </td></tr><tr><td><a href="41b619cb-8a37-06ae-64d1-e9acec85a5f0.htm">RFPROFILE_HIGHSPEED</a></td><td>
            High speed RF profile. This profile provides best throughput, but is prone to RF interference.
            </td></tr><tr><td><a href="416153df-20e4-b857-5c7d-9f3acdb9bba6.htm">RFPROFILE_NOMINAL</a></td><td>
            Nominal RF profile. This profile works good in most environments.
            </td></tr><tr><td><a href="d00a1427-2981-075f-2f06-c8e632dc363c.htm">RFPROFILE_ROBUST</a></td><td>
            Robust RF profile. This profile is recommended to use in noisy RF environments.
            </td></tr><tr><td><a href="14a250c6-459f-1f7e-aeda-09bd04447911.htm">RW_EA1</a></td><td>
            Extended address 1. In the singulation data the address is extended i.e. 64-bit instead of 32-bit.
            </td></tr><tr><td><a href="d5f313a8-6a86-5926-0574-3a1c357faff8.htm">RW_EA2</a></td><td>
            Extended address 2. In the read and write the address is extended i.e. 64-bit instead of 32-bit.
            </td></tr><tr><td><a href="376b4768-effd-e266-f157-da4abb8344ad.htm">RW_SBP</a></td><td>
            Singulation block present.
            </td></tr><tr><td><a href="fba14f1c-6def-be95-01ca-a277d84ca467.htm">RW_SEC</a></td><td>
            Operation is secured.
            </td></tr><tr><td><a href="acaae91e-156f-cd45-a318-a70ee900339a.htm">RXDECODING_FM0</a></td><td>
            RX modulation FM0.
            </td></tr><tr><td><a href="37aa8e39-5a18-6dea-8531-c827071becc8.htm">RXDECODING_M2</a></td><td>Miller-2</td></tr><tr><td><a href="461f8490-6f7d-56ed-2131-fed1ab9099c6.htm">RXDECODING_M4</a></td><td>Miller-4</td></tr><tr><td><a href="b947ddf1-76b9-1ab7-4ddb-86dd3084cbb8.htm">RXDECODING_M8</a></td><td>Miller-8</td></tr><tr><td><a href="decfcbfa-f56a-6267-2f98-8ce335d15597.htm">RXSENS_HIGH</a></td><td>
            Receiver sensitivity "high".
            </td></tr><tr><td><a href="1e012cb8-06c4-5ef6-372a-369abaf01554.htm">RXSENS_LOW</a></td><td>
            Receiver sensitivity "low".
            </td></tr><tr><td><a href="e13ae64a-c950-189a-1139-f205de5e50f2.htm">RXSENS_NOMINAL</a></td><td>
            Receiver sensitivity "nominal".
            </td></tr><tr><td><a href="b7fae8d4-ea8b-2439-5965-01ab398b7ffd.htm">SELSTATE_ALL</a></td><td>
            G2 Query sel state: All tags respond, ignoring SL flag
            </td></tr><tr><td><a href="ea2a0df8-7f6b-b4b8-8fc9-b1899ef8fad3.htm">SELSTATE_NOTSL</a></td><td>
            G2 Query sel state: Only tags with SL deasserted responds
            </td></tr><tr><td><a href="5cf1bd61-2b6c-1b26-d17f-3d2ecc2519f2.htm">SELSTATE_SL</a></td><td>
            G2 Query sel state: Only tags with SL asserted responds
            </td></tr><tr><td><a href="1095862f-ac94-a7a5-797d-65f0f6e0950d.htm">SESSION_S0</a></td><td>
            Session 0
            </td></tr><tr><td><a href="f2a81ec0-ae0e-2ba3-46d1-27c83005c57b.htm">SESSION_S1</a></td><td>
            Session 1
            </td></tr><tr><td><a href="dd5d50a4-5330-564f-da6f-1885228f2a76.htm">SESSION_S2</a></td><td>
            Session 2
            </td></tr><tr><td><a href="20dfa527-8535-2df8-be6b-b92e372a67af.htm">SESSION_S3</a></td><td>
            Session 3
            </td></tr><tr><td><a href="e1606773-0ce0-913a-a774-97471a4618fe.htm">SESSION_SL</a></td><td>
            SL Flag (filter)
            </td></tr><tr><td><a href="3c4ae653-6f3b-e886-10ad-8d686e85576c.htm">SETUP_ALL</a></td><td>
            All setup flags.
            </td></tr><tr><td><a href="2d916605-2dbb-f513-c330-7de84c0310fa.htm">SETUP_ANTMASK</a></td><td>
            antennaMask field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="d8cc357e-f21e-b6f3-2515-d87f9e3cc267.htm">SETUP_ANTMASKEX</a></td><td>
            antennaMaskEx field in struct NUR_MODULESETUP is valid.
            </td></tr><tr><td><a href="d40bbd0d-5b85-4e03-cac7-6d78b6c45640.htm">SETUP_AUTOPERIOD</a></td><td>
            periodSetup field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="120bb71e-40b7-615f-1622-0e40db99ac46.htm">SETUP_AUTOTUNE</a></td><td>
            autotune field in struct NUR_MODULESETUP is valid (run-time automatic tuning).
            </td></tr><tr><td><a href="72a732cb-5de3-dd0d-2582-df9fbb4862f0.htm">SETUP_INVENTORYTO</a></td><td>
            inventoryTriggerTimeout field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="53d83f3e-9fc8-b8d2-5add-9f3358b77f57.htm">SETUP_INVEPCLEN</a></td><td>
            inventoryEpcLength field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="5fdc25d8-a331-2b38-d3b5-5a69370809ff.htm">SETUP_INVQ</a></td><td>
            inventoryQ field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="5091d2ad-6362-ca18-1f3c-744237d17fed.htm">SETUP_INVROUNDS</a></td><td>
            inventoryRounds field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="28bad495-6979-aa3e-7979-eb5faaa9dd8e.htm">SETUP_INVRSSIFILTER</a></td><td>
            inventoryRssiFilter field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="be912a2d-136e-59d4-5005-8feb930d66ba.htm">SETUP_INVSESSION</a></td><td>
            inventorySession field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="7934a721-5341-b067-a821-b5c3244d2b42.htm">SETUP_INVTARGET</a></td><td>
            inventoryTarget field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="1dd7a557-19f5-bbaa-66ce-8b3f557c905a.htm">SETUP_KILLTIMEOUT</a></td><td>
            killTO field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="390b1da3-0b1d-ae9d-0cd6-01174d9656d5.htm">SETUP_LINKFREQ</a></td><td>
            linkFreq field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="5c7a12c5-c3a7-fb60-a10e-09c1e5de06dd.htm">SETUP_LOCKTIMEOUT</a></td><td>
            lockTO field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="454279a8-de3a-4288-b658-61a95a5b0788.htm">SETUP_OPFLAGS</a></td><td>
            opFlags field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="fc4e1657-71d8-7549-ac35-da9ef4a6f64d.htm">SETUP_PERANTOFFSET</a></td><td>
            perAntOffset field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="0032f249-d9ae-870c-e432-b181e218da07.htm">SETUP_PERANTPOWER</a></td><td>
            perAntPower field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="669c0a8e-d548-ad52-006f-71261716922b.htm">SETUP_PERANTPOWER_EX</a></td><td>
            The antPowerEx field in struct NUR_MODULESETUP is valid.
            </td></tr><tr><td><a href="0ebc982e-4b77-7567-e396-aaaa52da518b.htm">SETUP_READRSSIFILTER</a></td><td>
            readRssiFilter field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="aebba616-8ee7-c325-6c76-7686360955ed.htm">SETUP_READTIMEOUT</a></td><td>
            readTO field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="9a530b53-330f-ae2d-e410-c4bbfb05af5a.htm">SETUP_REGION</a></td><td>
            regionId field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="e3855431-c0ee-b758-2e98-50763f175aec.htm">SETUP_RFPROFILE</a></td><td>
            rfProfile field in struct NUR_MODULESETUP is valid.
            </td></tr><tr><td><a href="147e6785-8cd3-60be-3967-2fc03c94293e.htm">SETUP_RXDEC</a></td><td>
            rxDecoding field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="598e8d08-929d-fd21-7948-a7c319224a34.htm">SETUP_RXSENS</a></td><td>
            rxSensitivity field in struct NUR_MODULESETUP is valid.
            </td></tr><tr><td><a href="988b2aac-168e-767f-1de0-e691581e00f4.htm">SETUP_SCANSINGLETO</a></td><td>
            scanSingleTriggerTimeout field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="c425ce98-4530-9fb2-d3e7-05451a806b82.htm">SETUP_SELECTEDANTENNA</a></td><td>
            selectedAntenna field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="209aa4ca-1407-30da-c8f2-48d77e75ed3b.htm">SETUP_TO_SLEEP_TIME</a></td><td>
            "To sleep time" field in struct NUR_MODULESETUP is valid.
            </td></tr><tr><td><a href="0331983a-5d82-c21b-7b4d-b55ecb2c2418.htm">SETUP_TXLEVEL</a></td><td>
            txLevel field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="b639a334-e8b7-16aa-5713-bf44984f6bd6.htm">SETUP_TXMOD</a></td><td>
            txModulation field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="09e3abeb-9da8-913b-91f0-8897abbc0eb8.htm">SETUP_WRITERSSIFILTER</a></td><td>
            writeRssiFilter field in struct ModuleSetup is valid
            </td></tr><tr><td><a href="eec70d9f-8dc4-5cba-3d0b-7b5f428072a2.htm">SETUP_WRITETIMEOUT</a></td><td>
            writeTO field in struct ModuleSetup is valid.
            </td></tr><tr><td><a href="41e9c9ff-7a91-42bf-5725-70955584127d.htm">STORE_ALL</a></td><td>
            Store all settings to module internal non-volatile memory.
            </td></tr><tr><td><a href="3c29c6c4-7ecf-db84-417a-0b307cb5a289.htm">STORE_BAUDRATE</a></td><td>
            Store baudrate settings to module internal non-volatile memory.
            </td></tr><tr><td><a href="a456563b-2a50-30f8-e557-c77a7da8d9cf.htm">STORE_GPIO</a></td><td>
            Store GPIO/Sensor settings to module internal non-volatile memory.
            </td></tr><tr><td><a href="8f09f68b-ef44-36d1-d6f4-cecb9028f115.htm">STORE_OPFLAGS</a></td><td>
            Store Opflags settings to module internal non-volatile memory.
            </td></tr><tr><td><a href="ed256775-e16c-1229-ff0b-7eb39aa53a0e.htm">STORE_RF</a></td><td>
            Store RF settings to module internal non-volatile memory.
            </td></tr><tr><td><a href="322fe1f1-635c-a817-f3ca-9c3c79d33b76.htm">SZ_NUR_DEVCAPS</a></td><td>
            Constant size of the device capabilites.
            </td></tr><tr><td><a href="e4619780-3382-26df-4f45-4a1cfba32add.htm">SZ_TAM2_BLOCK</a></td><td>ISO29167-10 authentication: size of single custom data block in bytes.</td></tr><tr><td><a href="16c9970e-62d9-06eb-f168-78e5ffaee6c2.htm">SZ_TAM2_CMACLEN</a></td><td> ISO29167-10 authentication: size of protection mode 2,3 CMAC in bytes. </td></tr><tr><td><a href="f088fb30-8cf1-acef-5417-56ebc2f74046.htm">TAM_KEYLEN</a></td><td> ISO29167-10 authentication: key length. </td></tr><tr><td><a href="94bf296d-85c0-c0de-4a80-eba1b9a774a4.htm">TAM_MAXBLOCKS</a></td><td> ISO29167-10 authentication: maximum block at once. </td></tr><tr><td><a href="08cb79f2-9720-83f8-b251-002ff5d69945.htm">TID_HIDE_ALL</a></td><td> Gen2 version 2 TID hide policy: hide all. </td></tr><tr><td><a href="35895ab4-ec8e-cf1d-4f0f-1193aafe24ba.htm">TID_HIDE_NONE</a></td><td> Gen2 version 2 TID hide policy: hide none. </td></tr><tr><td><a href="08aa3679-2eb9-13a7-8742-54e329bc8ca6.htm">TID_HIDE_SOME</a></td><td> Gen2 version 2 TID hide policy: hide some. </td></tr><tr><td><a href="abbfc531-aa1d-775e-aba0-5e69e45ecfd4.htm">TRACETAG_NO_EPC</a></td><td>Do not transfer EPC back from trace tag function.</td></tr><tr><td><a href="ae0dc9dc-5795-5b6a-5886-1e09d88f0e08.htm">TRACETAG_START_CONTINUOUS</a></td><td>Start continuous tag tracing.</td></tr><tr><td><a href="2092c055-4a68-0ebd-905b-8c61bb17a5a4.htm">TRACETAG_STOP_CONTINUOUS</a></td><td>Stop continuous tag tracing.</td></tr><tr><td><a href="5f3ba1dc-d969-4c92-3793-66568a220572.htm">TUNE_REVERT_FACTORY</a></td><td>
            Restore tuning from factory defaults to currently used .
            </td></tr><tr><td><a href="60c860cf-de46-7130-64f9-0a4f54b2798a.htm">TUNE_REVERT_OVERRIDE</a></td><td>
            Override currently used and user saved tuning with factory defaults.
            </td></tr><tr><td><a href="9639c23d-e79e-0632-badc-e5ec6861f8a3.htm">TUNE_REVERT_USER</a></td><td>
            Restore tuning from user memory.
            </td></tr><tr><td><a href="a38a423a-3834-c24f-a2e6-e306f962a512.htm">TUNEBAND_EU</a></td><td> EU tuning band definition. </td></tr><tr><td><a href="f07a5279-d366-68b5-6751-058f0ed0ba40.htm">TUNEBAND_FCC1</a></td><td> FCC lower tuning band definition. </td></tr><tr><td><a href="9f67a3b4-c656-a454-63b5-f40ebd2a06ba.htm">TUNEBAND_FCC2</a></td><td> FCC upper tuning band definition. </td></tr><tr><td><a href="9524b0f6-6ee5-d38f-a777-e6063a51ddac.htm">TUNETYPE_FAST</a></td><td> </td></tr><tr><td><a href="70ba9a05-384d-087d-9761-e440c440a4f4.htm">TUNETYPE_FULL</a></td><td> </td></tr><tr><td><a href="15e55b8f-04e3-9b44-455f-f0e5d6f827d6.htm">TUNETYPE_MEDIUM</a></td><td> </td></tr><tr><td><a href="9794ae67-3146-23d3-042c-20ebe58aca59.htm">TUNETYPE_WIDE</a></td><td> </td></tr><tr><td><a href="8d727a03-9292-56a2-6610-065b62aea399.htm">TXMODULATION_ASK</a></td><td>TX modulation</td></tr><tr><td><a href="21c52001-6908-4d37-f179-da485e2dc4b9.htm">TXMODULATION_PRASK</a></td><td>PR-ASK</td></tr><tr><td><a href="125a4f39-d0dd-f1ea-0b4f-cf63ec156e42.htm">UTRACE_RANGE_NORMAL</a></td><td> Gen2 version 2: Untraceable's range reduction policy: normal. </td></tr><tr><td><a href="41b43d6c-cd6a-3a8a-a4a0-dc483ee5345f.htm">UTRACE_RANGE_REDUCE</a></td><td> Gen2 version 2: Untraceable's range reduction policy: reduce. </td></tr><tr><td><a href="5aa35e94-60bf-afc3-ae43-47e59a93f6a7.htm">UTRACE_RANGE_TOGGLE</a></td><td>Gen2 version 2: Untraceable's range reduction policy: toggle (NOTE: not supported at the moment).</td></tr><tr><td><a href="6abeb83a-a4b9-76d2-cc61-5b32dafcefd1.htm">XPC_W1_MASK</a></td><td>
            The XPC_W1 presence mask.
            </td></tr><tr><td><a href="080fb4d2-f652-8d5d-4e81-54f2d05e3176.htm">XPC_XEB_MASK</a></td><td>
            The XPC_W2 presence mask.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="29411023-0052-089d-f65f-b19dc7aea29c.htm">NurApiDotNet Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>