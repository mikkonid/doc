<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NurApi.Inventory Method</title><meta name="Title" content="Inventory" /><meta name="Help.Id" content="M:NurApiDotNet.NurApi.Inventory" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="NurApiDotNet" /><meta name="guid" content="fd799331-b9b8-9093-312d-21e68f6a6415" /><meta name="Description" content="Perform single tag inventory. This function uses rounds, Q and session values from current module settings. How it works: The inventory operation returns information about the last inventory; it does not return tags." /><meta name="tocFile" content="../toc/ID0AE0C0EB0A.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Nurapi Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Nur<wbr />Api<span id="LSTBBC93C1B_0" data-languageSpecificText="cpp=::|nu=."></span>Inventory Method</h1><div class="summary">
            Perform single tag inventory.<br />
            This function uses rounds, Q and session values from current module settings.
            <p>
            How it works:
            </p><p>
            The inventory operation returns information about the last inventory; it does not return tags.
            The inventory response <a href="c559e065-8b8f-6332-9593-62e3fa38e8b4.htm">NurApi<span id="LSTBBC93C1B_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryResponse</a> contains namely the number of tags that were found during last inventory and the number of tags that are stored into the module's memory.
            After exeuting an inventory the tags need to be first retrieved from the module by calling <a href="c7cefc92-8a16-1f51-d5ca-3790e02b2bbc.htm">FetchTags<span id="LSTBBC93C1B_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> or <a href="2d82bddf-e365-349d-cf12-b19f2bf3dd60.htm">FetchTags(Boolean, Int32<span id="LSTBBC93C1B_3" data-languageSpecificText="cpp=%"></span>)</a> and after that 
            the tags are available in the NurApi's tag storage, <a href="6b3b097f-a9d5-38ff-d6d7-17d2079008be.htm">NurApi<span id="LSTBBC93C1B_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TagStorage</a> that can be retrieved by the get tags storage command, see <a href="5f84880d-64f9-0f3a-64ed-74bf0fab41a6.htm">GetTagStorage<span id="LSTBBC93C1B_5" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            If the inventory needs to be "clean" the method for clearing the module's is <a href="c149abe5-699c-47eb-e480-1c40e99ed35e.htm">ClearTagsEx<span id="LSTBBC93C1B_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>. Calling this method also clears the NurApi's tag storage and module tag storage.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="29411023-0052-089d-f65f-b19dc7aea29c.htm">NurApiDotNet</a><br /><strong>Assembly:</strong> NordicID.NurApi.Net (in NordicID.NurApi.Net.dll) Version: 3.1.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">NurApi<span id="LSTBBC93C1B_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryResponse</span> <span class="identifier">Inventory</span>()</code></pre></div></div><h4>Return Value</h4><a href="c559e065-8b8f-6332-9593-62e3fa38e8b4.htm">NurApi<span id="LSTBBC93C1B_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryResponse</a><br />Inventory result data as <a href="c559e065-8b8f-6332-9593-62e3fa38e8b4.htm">NurApi<span id="LSTBBC93C1B_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InventoryResponse</a></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-C#">/* Inventory example */
private void DoInventory(bool useModuleSettings)
{
    /* In the application main class the NurApi ("hNur") object is create like hNur = new NurApi(); */
    // Where the response is stored to.
    InventoryResponse resp;
    NurApi.TagStorage theStorage;

    try
    {
        // We'll clean up first.
        hNur.ClearTagsEx();    // Will clear the API's storage as well as the module's memory.

        // Do single inventory using module stored rounds, Q, session settings
        if (useModuleSettings) {
            resp = hNur.Inventory();
        } else {
            // Do single inventory with 'rounds' number of inventories using 'Q' in session 'session':
            int rounds = 1;
            int Q = 5;
            int session = 0;
            resp = hNur.Inventory(rounds, Q, session);
        }
    }
    catch (NurApiException ex)
    {
        // For example.
        HandleInventoryError(ex.error);
        return;
    }

    // If there were no exceptions, it is safe to assume that the module found some tags, now download from module including the metadata:
    try
    {
        theTags = hNur.FetchTags(true);
    }
    catch (NurApiException ex)
    {
        // Should not happen at this point.
        HandleCriticalError(ex.error);
        return;
    }

    // Proceeed as necessary.
    foreach (NurApi.Tag tag in theStorage)
    {
        NotifyAboutTag(tag);
    }

    // Simple inventory is now done.
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="1902b97f-38f5-bf7f-4e66-55bf65e24f9a.htm">NurApi Class</a></div><div><a href="7d0a6716-6f52-301f-7ac8-df0c93717a80.htm">Inventory Overload</a></div><div><a href="29411023-0052-089d-f65f-b19dc7aea29c.htm">NurApiDotNet Namespace</a></div><div><a href="15ea8f7a-a178-3546-1f3f-8a5326bbe19e.htm">InventorySelect(Int32, Int32, Int32, Boolean, Byte, UInt32, Int32, <span id="LSTBBC93C1B_10" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBBC93C1B_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></div><div><a href="7223396c-705e-eb8e-4eb2-bc4963f209ca.htm">InventorySelectByEPC(Int32, Int32, Int32, Boolean, <span id="LSTBBC93C1B_12" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBBC93C1B_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></div><div><a href="c7cefc92-8a16-1f51-d5ca-3790e02b2bbc.htm">FetchTags<span id="LSTBBC93C1B_14" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></div><div><a href="2d82bddf-e365-349d-cf12-b19f2bf3dd60.htm">FetchTags(Boolean, Int32<span id="LSTBBC93C1B_15" data-languageSpecificText="cpp=%"></span>)</a></div><div><a href="5f84880d-64f9-0f3a-64ed-74bf0fab41a6.htm">GetTagStorage<span id="LSTBBC93C1B_16" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></div><div><a href="6b3b097f-a9d5-38ff-d6d7-17d2079008be.htm">NurApi<span id="LSTBBC93C1B_17" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TagStorage</a></div><div><a href="3c4b1614-a88e-529e-0e0a-9a277b844526.htm">NurApi<span id="LSTBBC93C1B_18" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Tag</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>